"use strict";(self.webpackChunktse_dev_api=self.webpackChunktse_dev_api||[]).push([[45705],{87306:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"support/examples","title":"Usage Examples","description":"Examples use","source":"@site/versioned_docs/version-1.0.1/support/examples.md","sourceDirName":"support","slug":"/support/examples-apis","permalink":"/docs/support/examples-apis","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"general knowledge","permalink":"/docs/tags/general-knowledge"},{"inline":true,"label":"beginner","permalink":"/docs/tags/beginner"},{"inline":true,"label":"concepts","permalink":"/docs/tags/concepts"},{"inline":true,"label":"rest","permalink":"/docs/tags/rest"}],"version":"1.0.1","lastUpdatedAt":1741002409000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Usage Examples","slug":"examples-apis","description":"Examples use","tags":["general knowledge","beginner","concepts","rest"]},"sidebar":"tutorialSidebar","previous":{"title":"Release History *","permalink":"/docs/support/change-log"},"next":{"title":"General Knowledge","permalink":"/docs/support/general-knowledge/"}}');var r=t(74848),o=t(28453);const s={sidebar_position:6,title:"Usage Examples",slug:"examples-apis",description:"Examples use",tags:["general knowledge","beginner","concepts","rest"]},a="Documentation to Support Usage Scenarios",l={},c=[{value:"General Common",id:"general-common",level:2},{value:"Minimal Insertion of General Master Data",id:"minimal-insertion-of-general-master-data",level:4},{value:"Minimal Insertion of a Customer/Supplier",id:"minimal-insertion-of-a-customersupplier",level:4},{value:"Search for a Customer/Supplier by Tax Code and/or VAT Number",id:"search-for-a-customersupplier-by-tax-code-andor-vat-number",level:4},{value:"Minimal Insertion of an Item Code",id:"minimal-insertion-of-an-item-code",level:2},{value:"Documents",id:"documents",level:2},{value:"Price Search from Priority Price Lists",id:"price-search-from-priority-price-lists",level:2},{value:"Price Search from Parametric Price Lists",id:"price-search-from-parametric-price-lists",level:2},{value:"Print Documents Service: generating document print to PDF",id:"print-documents-service-generating-document-print-to-pdf",level:2},{value:"Kit Management",id:"kit-management",level:2},{value:"Inserting Document with Kit Type Item Code",id:"inserting-document-with-kit-type-item-code",level:2},{value:"Example",id:"example",level:3},{value:"Transfer Document Between Warehouses",id:"transfer-document-between-warehouses",level:2},{value:"Document Service",id:"document-service",level:2},{value:"Document Transformation 1-to-1 and Fulfillment Status Check",id:"document-transformation-1-to-1-and-fulfillment-status-check",level:2},{value:"Check Fulfillment Status",id:"check-fulfillment-status",level:2},{value:"Order Portfolio Fulfillment",id:"order-portfolio-fulfillment",level:2},{value:"Document Transformation 1 to n (DDT Fulfillment and Invoice Generation)",id:"document-transformation-1-to-n-ddt-fulfillment-and-invoice-generation",level:2},{value:"Document Transformation n to n",id:"document-transformation-n-to-n",level:2},{value:"Bulk Document Insertion",id:"bulk-document-insertion",level:2},{value:"External Price List Acquisition: Service IEImportLI",id:"external-price-list-acquisition-service-ieimportli",level:2},{value:"Export and Import of Customers or Suppliers from External Sources: Service IEImportCO and IEExportCO",id:"export-and-import-of-customers-or-suppliers-from-external-sources-service-ieimportco-and-ieexportco",level:2},{value:"Import Customers/Suppliers",id:"import-customerssuppliers",level:2},{value:"Export Customers/Suppliers",id:"export-customerssuppliers",level:2},{value:"Journal Entries",id:"journal-entries",level:2},{value:"Unsupported Managements",id:"unsupported-managements",level:2}];function d(e){const n={admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"documentation-to-support-usage-scenarios",children:"Documentation to Support Usage Scenarios"})}),"\n",(0,r.jsx)(n.p,{children:"To support the various managed usage scenarios, some use cases are provided as examples."}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"danger",children:(0,r.jsx)(n.p,{children:"Although the use of services allows for implementations different from those specified, it is reminded that the supported functionalities are those described in the indicated Use Cases."})}),"\n",(0,r.jsx)(n.h2,{id:"general-common",children:"General Common"}),"\n",(0,r.jsx)(n.h4,{id:"minimal-insertion-of-general-master-data",children:"Minimal Insertion of General Master Data"}),"\n",(0,r.jsx)(n.p,{children:"Insertion of general master data as a Natural Person:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "codfiscale": "MRARSS13S08H501H",\n    "partiva": null,\n    "flgAnagval": 1.0,\n    "ragSoAnag": "Mario Rossi & C",\n    "statofiscCg07" : 86.0, // Country ITALY\n    "sesso": 0.0, // 0 = M   1 = F\n    "addresses": [\n       {\n            "cap": 47838,\n            "citta": "Rimini",\n            "numciv": "12",\n            "via": "Draghi 9",\n            "addressesType": [\n                {\n                    "tipo": 1 // Business location\n                }\n            ],\n            "statoEst": {\n                "codice": 86.0 // Country ITALY\n            }\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"minimal-insertion-of-a-customersupplier",children:"Minimal Insertion of a Customer/Supplier"}),"\n",(0,r.jsx)(n.p,{children:"To insert a customer or supplier, it is necessary to have previously inserted the common master data and, when inserting a customer, indicate the corresponding common master data code, as shown in the example below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "flgAttivo": 1.0,\n    "tipocf": 0.0,\n    "generalMasterDataCO": {\n        "codice": 774\n    },\n    "paymentTermCO": {\n        "codPag": "301",\n        "descPag": "NR.01 RD A VISTA",\n        "id": 50\n    },\n    "extensionData": []\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"search-for-a-customersupplier-by-tax-code-andor-vat-number",children:"Search for a Customer/Supplier by Tax Code and/or VAT Number"}),"\n",(0,r.jsx)(n.p,{children:"Using the call"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"{{webapi_base_url}}/api/v1/{{scope}}/CO/lookup/CustomerSupplierCO?metadata=true&company={{defaultCompany}}&_op=search\n"})}),"\n",(0,r.jsx)(n.p,{children:"it is possible to search for a customer by VAT Number or Tax Code or by Company Name."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "filters": \n    {\n        "items":         \n        [ \n            {\n                "comparer": 0,             \n                "propertyName": "CustomerSupplierCO_Tipocf",            \n                "value": "0"             \n            },            \n            { \n                "operator": 1,             \n                "items":                 \n                [ \n                    {\n                        "propertyName": "CustomerSupplierCO_GeneralMasterDataCO_Partiva",                        \n                        "comparer": 0,                      \n                        "value": "25052733463"                        \n                    },                        \n                    {\n                        "operator": 2,                   \n                        "propertyName": "CustomerSupplierCO_GeneralMasterDataCO_Codfiscale",                        \n                        "comparer": 30,                         \n                        "value": "MRARSS13S08H501H" \n                    }, \n                    {\n                        "operator": 2,                      \n                        "propertyName": "CustomerSupplierCO_GeneralMasterDataCO_RagSoAnag",                       \n                        "comparer": 20,                           \n                        "value": "ROSSI"                        \n                    }                                \n                ] \n            }\n        ]\n    },  \n    "pageSize": 5,  \n    "pageNumber": 0\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"minimal-insertion-of-an-item-code",children:"Minimal Insertion of an Item Code"}),"\n",(0,r.jsx)(n.p,{children:"Insert example JSON here."}),"\n",(0,r.jsx)(n.h2,{id:"documents",children:"Documents"}),"\n",(0,r.jsx)(n.p,{children:'The "Document" resource can be used to insert/delete/modify a document in TSE. The resource can be used to insert any type of document, simply by changing the document code in the call.'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": For the information passed to the document WebAPI with the related DTO to be effectively received and stored, it is necessary that the wizard of the used document code manages them on the user interface. Therefore, during the solution design phase, it is always advisable to perform a double check to ensure that a document inserted from the user interface with the same information passed via WebAPI is correctly inserted."]}),"\n",(0,r.jsx)(n.p,{children:"The insertion of a document can occur synchronously with the POST method."}),"\n",(0,r.jsxs)(n.p,{children:["Please note that to insert a document, it is not necessary to populate all the properties of the complex DTO that represents it. The ",(0,r.jsx)(n.em,{children:"minimal"})," insertion of the document is done by indicating:"]}),"\n",(0,r.jsxs)(n.p,{children:['"',(0,r.jsx)(n.strong,{children:"company"}),'" or "companyCg18" (the working company code): property in DocumentHeader.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": From version ",(0,r.jsx)(n.strong,{children:"202501000"}),", a default logic for the ",(0,r.jsx)(n.code,{children:"company"})," field in Data Transfer Objects (DTO) has been introduced. If the value of the ",(0,r.jsx)(n.code,{children:"company"}),' field of the "root" entity is not provided or is null, it is automatically populated with the company code derived from the current user session (parameter ',(0,r.jsx)(n.code,{children:"company"}),"). This operation propagates to all associated ",(0,r.jsx)(n.code,{children:"external"})," and ",(0,r.jsx)(n.code,{children:"internal"})," entities."]}),"\n",(0,r.jsxs)(n.p,{children:['"',(0,r.jsx)(n.strong,{children:"companyDocumentMasterData"}),'": property of type CompanyDocumentMasterDataMGDTO that represents the document code to be used for the document insertion. In TSE, each document refers to a document code previously activated for the working company.\nTo insert a document, it is mandatory to indicate the document code to be used, a code to which behaviors and parameterizations with the related functionalities of the management system (Document Customization / Company Document Customization) are associated, and specify whether the document code is standard or customized.\nA possible value for the companyDocumentMasterData property could be:']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "companyDocumentMasterData": {\n        "codDocumMg36": "C-ORDINE",\n        "indStaperMg36": 1\n    }\n}\n\nIn this way, a document with the document code "C-ORDINE" customized (indStaperMg36 = 1, while for standard document codes indStaperMg36 = 0) activated on company 100 is inserted.\n\n"**customerSupplierMG**": property of type customerSupplierMGDTO that represents the customer or supplier to whom the document is addressed. For example, to address the document to the customer with code 123, it is necessary to set the \'customerSupplierMG\' property as follows:\n\n{\n    "customerSupplierMG": {\n        "tipocfCg40": 0,\n        "cliFor": 123\n    }\n}\nNote that cliFor is the customer (or supplier for supplier-type documents) code and not its ID present in the CG44_CLIFOR table. Finally, remember that if the document code requires the customer or supplier, it is necessary to define the \'tipocfCg40\' indicator with the possible values of the CG44_TIPOCF field of the CG44_CLIFOR table, which are:\n\n0 for customers 1 for suppliers\n\n"**sezdoc**": the section of the document numbering (e.g., "sezdoc": "00")\n\n"**storageWH**": the property of type StorageWHDTO that represents the warehouse to be moved. For example, working on company 100, to order goods in warehouse "00", it is necessary to set the storageWH property as follows:\n\n{\n    "storageWH": {\n        "codDep": "00"\n    }\n}\n"**lines**": the array of lines to be inserted in the document; it is an array of objects of type DocumentLineMGDTO. The types of lines currently managed in the document body are as follows:\n\nItem (indtiporiga = 0)\nManual Item (indtiporiga = 1)\nDescriptive (indtiporiga = 2)\nExpense (indtiporiga = 4)\nFixed Text (indtiporiga = 6)\nNode (indtiporiga = 15)\nActivity (indtiporiga = 16)\nProject Expense (indtiporiga = 17)\nOther types usable from the direct document issuance interface are not supported.\n\nDepending on the type of line to be inserted in the document, a different "indtiporiga" must be specified, as described above. For each document line, at least the line number, code, and quantity must be indicated.\n\nFor item lines, at least the line number, item code, item description, and quantity must be indicated. The indtiporiga property takes the default value of 0 if not set.\n{\n    "progrRiga": 1.0,\n    "codartMg66": "ART001",\n    "descart": "Item description ART001",\n    "qta1": 1.000\n}\nNote: If item lines are inserted and an item code provides for the automatic explosion of additional lines, the progrRiga is automatically recalculated by the procedure.\n\nFor miscellaneous expense lines, at least indtiporiga, line number, quantity (normally unitary), and expense code, an object of type MiscellaneousExpenseMGDTO, must be indicated, as in the following example:\n{\n    "indtiporiga": 4,\n    "progrRiga": 4.0,\n    "qta1": 1.000,\n    "miscellaneousExpenseMG": {\n        "code": "SP1"\n    }\n}\nNote on Document Customization: Document customizations are managed only in the document header through "extensionData" and "additionalData" and cannot be managed in the document lines. Therefore, to manage document customizations in the document body, it is necessary to use the CustomizedLine (DO35_DOCCORPOPERS) and ExtendedLine (DO36_DOCCORPOEST) fields.\n\nPrice retrieval when inserting lines If the prices and discounts of warehouse items inserted in the document body are passed with a value of zero, the business logic values them based on the price retrieval configuration set on the document code parameterization used.\n\nIf the price and discounts passed in the DTO are different from zero, the values proposed by the price retrieval logic from the configuration will be overwritten with the values passed in the DTO.\n\n**Note on Document Customization**: Document customizations are managed only in the document header through "extensionData" and "additionalData" and cannot be managed in the document lines. Therefore, to manage document customizations in the document body, it is necessary to use the CustomizedLine (DO35_DOCCORPOPERS) and ExtendedLine (DO36_DOCCORPOEST) fields.\n\n**Price retrieval when inserting lines**\nIf the prices and discounts of warehouse items inserted in the document body are passed with a value of zero, the business logic values them based on the price retrieval configuration set on the document code parameterization used.\n\nIf the price and discounts passed in the DTO are different from zero, the values proposed by the price retrieval logic from the configuration will be overwritten with the values passed in the DTO.\n\nRegarding Document scenarios, some examples are made available directly within the POST (Create) call of the IntegrationMG\\Documento module in the swagger:\n\n**IMMAGINE** DA RIPORTARE\n\nUsing the Try it out feature, it will be possible to automatically execute the call, replacing the placeholders indicated in the examples with the appropriate data.\n\n*Available Document examples on Swagger*:\n\n*Default (complete)*: shows the complete call body;\n*Min required*: Minimal mandatory header information;\n*Order*: example of an order-type document body;\n*Delivery Note*: example of a delivery note-type document body;\n*Invoice*: example of an invoice-type document body;\n*Transfer warehouses*: example of a warehouse transfer-type document body.\n\n**Propriet\xe0 callOptions**\nThe `callOptions` property allows grouping all call options/parameters that are not actual fields of the entity.\n\nCurrently, the following options are available:\n- `flgSpbolliForceZero` (default false): set to true if you want to force the value = 0 of the stamp duty expenses flag;\n- `flgSpincasForceZero` (default false): set to true if you want to force the value = 0 of the collection expenses flag;\n- `esclusioneAgentiMultipli` (default false): set to true to exclude the loading of multiple agents in the header;\n- `esclusioneIvaTestata` (default false): set to true to force the VAT code of the document header to Null;\n- `flgLockOnDocExist` (default false): set to true to block the insertion of an already existing document;\n- `disableLetterOfIntent` (default false): set to true to disable letters of intent;\n- `esclusioneSpeseTestiCliFor` (default false): set to true to exclude the proposal of default expense and fixed text lines of the Customer.\n\n**WARNING:** the parameters `esclusioneAgentiMultipli`, `esclusioneIvaTestata`, `flgLockOnDocExist` already present in the document header entity remain to ensure compatibility with previous versions; it is recommended not to use them as they have been deprecated, and the [Obsolete] attribute is used in the swagger.\n\n## Management of the Preferred Agent\nIt is possible to manage the preferred agent when saving a customer (CustomerSupplierCO). Any agent associated with the customer is inserted into the multiple agents as the preferred agent. It is also possible to define additional multiple agents for the customer.\nWhen inserting a document, the multiple agents stored in the customer registry are retrieved.\nHowever, if different agents are specified in "documentoTestataAgentiMG" during document insertion, these will replace those retrieved from the customer registry.\n\nThrough the callOptions property, it is possible to include or exclude multiple agents.\n\n**EsclusioneAgentiMultipli = false** (with callOptions property or parameter=0 on version 8)\n\n- If the `DocumentoTestataAgentiMG` property is not set in the DTO, the system will populate the `DO29_DOCTESAGENTI` table with the agents linked to the customer and retrieved using the usual logic employed by the management software when inserting the document from the interface.\n- If the `DocumentoTestataAgentiMG` property is set in the DTO, the system will populate the `DO29_DOCTESAGENTI` table with the agents mentioned in the previous point and with the agents passed in `DocumentoTestataAgentiMG` (the two sets of agents are merged).\n\n**EsclusioneAgentiMultipli = true** (with callOptions property or parameter=1 on version 8)\n\n- The system will populate the `DO29_DOCTESAGENTI` table only with any agents passed in `DocumentoTestataAgentiMG`, ignoring those that would be proposed by the customer configuration.\n'})}),"\n",(0,r.jsx)(n.h2,{id:"price-search-from-priority-price-lists",children:"Price Search from Priority Price Lists"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Retrieving Prices When Inserting Rows from Priority Price Lists: PricePriorityLI Service"}),"\nThe service allows you to perform a price search from priority price lists through the PricePriorityLI service."]}),"\n",(0,r.jsx)(n.p,{children:'The attached example shows the price of the priority price lists processed based on the Priority Table defined on TSE, used to generate the PricePriorityLI, and displays it in the Result ("RowElaboratePriceList") if the parameter "ResultElaboratePriceList" is set to true.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Price Type (typeSalePurchaseProd)"}),": ",(0,r.jsx)(n.code,{children:"Decimal"})," (DO11_TIPOCF_CG44/2)",(0,r.jsx)(n.br,{}),"\n","0 = Sales (default)",(0,r.jsx)(n.br,{}),"\n","1 = Purchases",(0,r.jsx)(n.br,{}),"\n","2 = Production"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Item Code (CodartMg66)"}),": ",(0,r.jsx)(n.code,{children:"String"})," (DO30_CODART_MG66) \u2014 mandatory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Customer/Supplier Code"}),": ",(0,r.jsx)(n.code,{children:"Decimal"})," (DO11_CLIFOR_CG44)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Registration Date"}),": ",(0,r.jsx)(n.code,{children:"Datetime"})," (DateElab) \u2014 mandatory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quantity 1 (of row) (qty1)"}),": ",(0,r.jsx)(n.code,{children:"Decimal"})," (DO30_QTA1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Price List Number (numPriceList)"}),": ",(0,r.jsx)(n.code,{children:"Decimal"})," (DO11_LISTMAG)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Warehouse Code (codDepMg58)"}),": ",(0,r.jsx)(n.code,{children:"String"})," (DO30_CODDEP_MG58)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enable display of processed price list (resultElaboratePriceList)"}),": if set = ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n  "typeSalePurchaseProd": 0,\n  "codArtMg66": "ART_LI",\n  "cliforCg44": 1,\n  "dateElab": "2024-06-14 00:00:00",\n  "qty1": 0,\n  "numPriceList": 1,\n  "codDepMg58": "00",\n  "resultElaboratePriceList": true\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"price-search-from-parametric-price-lists",children:"Price Search from Parametric Price Lists"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Retrieving prices when inserting rows from parametric price lists: PriceParametricLI service"}),"\nThe PriceParametricLI service allows you to determine the price based on parametric price lists starting from the priority code defined in the Priority Table on TSE."]}),"\n",(0,r.jsx)(n.p,{children:'This service requires the "PriceParametricParameters" and calls the stored procedure SPLP_QUOTPROBELIST to retrieve the current price with any discounts in "PriceParametricLI".'}),"\n",(0,r.jsx)(n.p,{children:"A parameter is also provided to request the detail of the outcome of the parametric price list processing, which allows you to understand how the price was formed based on the priority table and the providers used."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"WARNING!"}),": Currently, the stored procedure also manages commercial conditions and commissions for document footer, which are not handled in this initial phase (the fixed parameter @RIGA_PIEDE=0 is passed to the stored procedure)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ResultElab"})," bool (default false)\nParameter to activate the outcome of the parametric price list processing.\nIf activated, it is necessary to pass to the stored procedure the name of a temporary table where all the price rows found to generate the final price are stored."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"dataReg"})," - Registration date --- mandatory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CodTabPriority"})," int64 (ID_TABPRIORITA) --- mandatory\nThrough the code, the IdTabPriority to be passed to the stored procedure is derived."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tipocfCg44"})," - Customer/Supplier Type Decimal (DO11_TIPOCF_CG44)\nWARNING: Document type conversion: customer= 0 --\x3e becomes 1 and supplier=1 becomes 2 to be passed to the stored procedure."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cliforCg44"})," - Customer/Supplier Code Decimal (DO11_CLIFOR_CG44)\nAll customer/supplier fields are read automatically."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"codartMg66"})," - String (DO30_CODART_MG66) --- mandatory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"documentData"})," - Document date Datetime (DATADOC)\nIf not set, it is valued with the registration date"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n{\n\xa0 \xa0 \xa0 \xa0 "resultElab": false,\n\xa0 \xa0 \xa0 \xa0 "dataReg": "2023-06-22T13:34:35.125Z",\n\xa0 \xa0 \xa0 \xa0 "CodTabPriority": "TVEN",\n\xa0 \xa0 \xa0 \xa0 "tipocfCg44": 0,\n\xa0 \xa0 \xa0 \xa0 "cliforCg44": 2,\n\xa0 \xa0 \xa0 \xa0 "codartMg66": "2",\n\xa0 \xa0 \xa0 \xa0 "documentData": {\n\xa0 \xa0 \xa0 \xa0 "qta1": 10,\n\xa0 \xa0 \xa0 \xa0 "documMg36": "CLI-FATIMM"\n\xa0 \xa0 \xa0 \xa0 }\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"print-documents-service-generating-document-print-to-pdf",children:"Print Documents Service: generating document print to PDF"}),"\n",(0,r.jsx)(n.p,{children:"To enable the PDF printing of a document, it is possible to retrieve the streamPDF of a document with a GET request using the Print command. This streamPDF must then be decoded and converted into a PDF using any conversion program."}),"\n",(0,r.jsx)(n.p,{children:"Example of GET request to generate the streamPDF:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/Documento/<NumeroDocumento>/print?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The service returns the following Json:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "streamPDF": "JVBERi0xLjMgCiXi48/ \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026.. ",\n    "error": ""\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"The content of the streamPDF must be copied and inserted into any conversion program to proceed with decoding and converting it into a PDF."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Warning - in case of archived and valid print"}),": in the case of archived and valid print, it is necessary to re-export, and the program retrieves the archived PDF from the disk."]}),"\n",(0,r.jsx)(n.h2,{id:"kit-management",children:"Kit Management"}),"\n",(0,r.jsx)(n.p,{children:"It is possible to search, insert, modify, and delete a kit and consequently use it within appropriately configured documents (General Document Parameters - Customization) with the related explosion of components in the document rows."}),"\n",(0,r.jsxs)(n.p,{children:["Using the Master KitWH and Detail KitLinkWH entities, it is possible to create ",(0,r.jsx)(n.em,{children:"simple kits"})," by defining only the item and quantity"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n    "codProductMg66": "BICI",\n    "dittaCg18": {{azienda}},\n    "exclusionChild1Mg82": null,\n    "exclusionChild2Mg82": null,\n    "exclusionChild3Mg82": null,\n    "exclusionChild4Mg82": null,\n    "exclusionFather1Mg82": "OR",\n    "exclusionFather2Mg82": "BO",\n    "exclusionFather3Mg82": "FA",\n    "exclusionFather4Mg82": "PR",\n    "optionProductMg5e": "",\n    "kitLinkWH": [\n        {\n            "codComponentMg66": "BICI2",\n            "optionComponentMg5e": "",\n            "qtyComponent1": 10.000000\n        },\n        {\n            "codComponentMg66": "MSE003",\n            "qtyComponent1": 15.000000\n        }\n    ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["or create ",(0,r.jsx)(n.em,{children:"complete kits"}),", where it is possible to set additional properties:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n    "codProductMg66": "MSE002",\n    "dittaCg18": {{azienda}},\n    "exclusionChild1Mg82": null,\n    "exclusionChild2Mg82": "BO",\n    "exclusionChild3Mg82": "PR",\n    "exclusionChild4Mg82": null,\n    "exclusionFather1Mg82": "OR",\n    "exclusionFather2Mg82": "BO",\n    "exclusionFather3Mg82": "FA",\n    "exclusionFather4Mg82": "PR",\n    "optionProductMg5e": "",\n    "kitLinkWH": [\n        {\n            "codComponentMg66": "BICI2",\n            "optionComponentMg5e": "",\n            "StartingDate": "2024-01-15T00:00:00",\n            "endingDate": "2024-12-31T00:00:00",\n            "qtyComponent1": 13.000000,\n            "qtyComponent2": 10.000000,\n            "fixedQta": 1,\n            "typeBomLink": 3,\n            "typeOptionalLink": 1,\n            "typeVal": 2,\n            "costComponent": 10.0000\n        },\n        {\n            "codComponentMg66": "BICI",\n            "optionComponentMg5e": "",\n            "StartingDate": "2024-01-15T00:00:00",\n            "edningDate": "2024-06-31T00:00:00",\n            "qtyComponent1": 25.000000,\n            "qtyComponent2": 33.000000,\n            "fixedQta": 1,\n            "typeBomLink": 3,\n            "typeOptionalLink": 0,\n            "typeVal": 3,\n            "costComponent": 150.0000\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"inserting-document-with-kit-type-item-code",children:"Inserting Document with Kit Type Item Code"}),"\n",(0,r.jsx)(n.p,{children:"Through a standard document insertion call, it is possible to include a Kit type item code among the document rows. The explosion of the related components and the explosion mode must be predefined by the ERP in General Document Parameters, Document Customization, or Company Document Customization, depending on the company's needs."}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The following example involves the insertion of a DDT using the customized document type 'C-DDT', which includes two document rows:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"One with a normal item code."}),"\n",(0,r.jsx)(n.li,{children:"The other with a Kit type item code."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This document type provides for the explosion of the Kit components, with each component being listed on the document as a descriptive row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "valutaCg08": "EURO",\n    "anagraficaDocumentoDitta": {\n        "codDocumMg36": "C-DDT",\n        "indStaperMg36": 1.0\n    },\n    "customerSupplierMG": {\n        "tipocfCg40": 1,\n        "cliFor": 1\n    },\n    "sezdoc": "00",\n    "storageWH": {\n        "codDep": "00"\n    },\n    "righe": [\n        {\n            "progrRiga": 1.0,\n            "codartMg66": "ART001",\n            "descart": "Articolo ordinario",\n            "qta1": 15.000\n        },\n        {\n            "progrRiga": 1.0,\n            "codartMg66": "MSE002",\n            "descart": "Articolo kit",\n            "qta1": 15.000\n        }\n    ]\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"transfer-document-between-warehouses",children:"Transfer Document Between Warehouses"}),"\n",(0,r.jsx)(n.p,{children:"It is possible to issue an outbound warehouse DDT, automatically generating a new inbound warehouse DDT."}),"\n",(0,r.jsx)(n.p,{children:"In the JSON for the Header part, the storageWH properties for the originating warehouse must be filled out"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n\u202f \u202f "storageWH": { \n\u202f \u202f \u202f \u202f "codDep": "00" \n\u202f \u202f }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"and storageWHCollegato for the destination warehouse \u202f"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n"storageWHCollegato": { \n\u202f \u202f \u202f \u202f "codDep": "01", \n\u202f \u202f \u202f \u202f "descrdep": "Deposito secondario", \n\u202f \u202f }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"If within a document the user wants to define a row warehouse different from the header warehouse, in the JSON file, in the document rows section, coddepcolMg58 and coddepMg58 must be filled out :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n\u202f \u202f "coddepcolMg58": "01",\xa0\n\u202f \u202f \u202f"coddepMg58": "00",\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"where the first indicates the destination warehouse and the second indicates the originating warehouse."}),"\n",(0,r.jsx)(n.h2,{id:"document-service",children:"Document Service"}),"\n",(0,r.jsx)(n.p,{children:"DocumentService contains a set of processing services to complement the CRUD part of the documents, such as transformation, fulfillment, order portfolio fulfillability check, and bulk insertion of synchronous and asynchronous document types."}),"\n",(0,r.jsx)(n.h2,{id:"document-transformation-1-to-1-and-fulfillment-status-check",children:"Document Transformation 1-to-1 and Fulfillment Status Check"}),"\n",(0,r.jsx)(n.p,{children:"The attached example presents the ERP-B2C interaction scenario that involves the insertion of a Customer Order with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimal mandatory header information"}),"\n",(0,r.jsx)(n.li,{children:"Item type row, with item code and quantity (price retrieved from the price list in the BO)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Regarding Document Transformation (transform), with the following call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/DocumentService/transform?company={{defaultCompany}}&force=24368,89522\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"The document is transformed into an invoice by specifying the registration number of the source order document and the related transformation model. The response includes the registration number of the generated invoice."}),"\n",(0,r.jsx)(n.p,{children:'The service retrieves the parameters from "DocumentTransformationParameterDTO," which contains the transformation model defined on the ERP and the list of registration numbers of the source documents. It returns in "DocumentTransformationMGDTO" the list of registration numbers of the generated documents.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"DocumentTransformationParameterDTO"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n"[NumRegOrigin]"  - obbligatorio (Numero di registrazione che si vuole trasformare/evadere)\n"CodModelTransfDoc" - obbligatorio (Codice modello per la trasformazione documento)\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"DocumentTransformationResponseDTO"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n"<NumRegDestination>" - (Elenco dei numero di registrazione creati)\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"In case of warning messages"})," it is possible to override them with the following parameters:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"&force=24368"}),": in the Presence of Blocked Article Notifications;\n",(0,r.jsx)(n.em,{children:"&force=29074"}),": in the Presence of Notifications for Articles and Batches Transformed Understock."]}),"\n",(0,r.jsx)(n.p,{children:"The following Lookups are also available to trace transformation models and their composition, as well as Lookups that query beyond the already existing entities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ModelTrasformationCompanyMG"}),": with details in ",(0,r.jsx)(n.strong,{children:"ModelTrasformationCompanyDetMG"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ModelTrasformationMG"}),": with details in ",(0,r.jsx)(n.strong,{children:"ModelTrasformationDetMG"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These contain the source and destination document codes used by the transformation model:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"General Transformation Models Lookup"}),": View all models (general archive) detailed with source and destination documents"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/Lookup/ModelTrasformationMG\n\n- **General Transformation Models Details Lookup**: View All Model Details (general archive)\n\nwebapi_base_url/api/v1/{{scope}}/MG/Lookup/ModelTrasformationDetMG\n\n- **General Transformation Models Lookup**: View Activated Models by Company (Without Details)\n\nwebapi_base_url/api/v1/{{scope}}/MG/Lookup/ModelTrasformationCompanyMG\n\n- **Transformation Models Lookup with Document Details**: View Activated Models by Company or General Archive with details of actual source and destination documents. The property **ModelTrasformationCompanyMG.IndEvasmult** is retrieved from the ERP. If set to 99, the documents from the general archive are used. If set to 1, the company's documents are used instead.\n\nwebapi_base_url/api/v1/{{scope}}/MG/Lookup/ModelTrasformationCompanyDetMG\nwebapi_base_url/api/v1/{{scope}}/MG/Lookup/ModelTrasformationCompanyWithCodeDoc\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"check-fulfillment-status",children:"Check Fulfillment Status"}),"\n",(0,r.jsxs)(n.p,{children:["Subsequently, with the ",(0,r.jsx)(n.strong,{children:"Check Fulfillment Status"})," lookup, it is possible to indicate the registration number or the document number of the initial order. The response returns the list of rows of the document indicated in the input with the respective fulfillment status (document quantity, fulfilled quantity, remaining quantity) and reference to the rows that have picked up the document."]}),"\n",(0,r.jsxs)(n.p,{children:["Regarding the Document Fulfillment Status Check (",(0,r.jsx)(n.em,{children:"docprocessingstatus"}),"), the following call:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/DocumentService/docprocessingstatus?company={{defaultCompany}}&user=admin&loadEntireDomain=true&getTotalCount=true\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"process the result based on a typical Search. Through a POST Action, allows setting all the properties exposed by the reference DTO dynamically in the body and returns a collection of entities containing the rows of the reference document with their progress statuses and their own fulfillment status"}),"\n",(0,r.jsx)(n.p,{children:'In the query parameter, it is also possible to set the pagination criterion with totals, by setting the parameter  "getTotalCount" to True.'}),"\n",(0,r.jsx)(n.p,{children:"Additionally, a Lookup service for querying the fulfillment status of individual orders is available as shown below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/Lookup/DocumentoStatoEvasoMG?metadata=true&company={{defaultCompany}}&_op=search\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"order-portfolio-fulfillment",children:"Order Portfolio Fulfillment"}),"\n",(0,r.jsxs)(n.p,{children:["The Order Portfolio Fulfillment service, which belongs to the ",(0,r.jsx)(n.em,{children:"external shipping scenario"}),", allows retrieving the order portfolio fulfillment list for shipping set in the ERP ",(0,r.jsx)(n.em,{children:"by indicating the parameter used, in this case 1, and with fulfillment type for each item, in synchronous mode. The order list is visible in the response."})]}),"\n",(0,r.jsx)(n.p,{children:"To retrieve the list of fulfillable orders for shipping, make the following call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/DocumentService/orderavailability?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n    "LimiteEvadibilita": 1,\n    "tipoEvadibilita": 0,\n    "codart":"",\n    "IsAsyncMode": "true",\n    "MinExpire": "180"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"LimiteEvadibilita"})," parameter allows pre-parameterization of filters via ERP, which will be considered during the payload phase in the POST request. It is also possible to define the type of fulfillment (",(0,r.jsx)(n.em,{children:"tipoEvadibilita"}),"), with the default value being 0."]}),"\n",(0,r.jsx)(n.p,{children:'The values accepted by the "tipoEvadibilita" node in the body are:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"0 overall for all items (default);"}),"\n",(0,r.jsx)(n.li,{children:"1 for selected item;"}),"\n",(0,r.jsx)(n.li,{children:"2 overall for all documents."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.em,{children:"IsAsyncMode"})," parameter of the call is set to false, the processing will occur sequentially, requiring the response with the resulting result set to be awaited."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:"IsAsyncMode"})," node, if set to 'true', will ensure that the value retrieval is handled asynchronously, altering the usual behavior of the requests; in this case, all items are considered, and a GuidSession is returned in the response."]}),"\n",(0,r.jsx)(n.p,{children:'With the returned "guidSession", it will be possible to retrieve the result through:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"appropriate Lookup Set on the Entity:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/Lookup/DocumPortfolioEvaMG?metadata=true&company={{defaultCompany}}&_op=search\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'or by reusing the same call endpoint, expanding the body with the obtained "guidSession" node:'}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/DocumentService/orderavailability?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "LimiteEvadibilita": 1,\n    "tipoEvadibilita": 0,\n    "codart":"",\n    "IsAsyncMode": "true",\n    "MinExpire": "180",\n    "guidSession": "{{guidSession}}"\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:'The "MinExpire" parameter allows you to set the duration of persistence between calls of the result, expressed in minutes, and will be used to simulate a cache of the data grid stored in a table. With each call, the table will be cleaned of rows of previous results that have expired the expected time terms (MGM2_PORTAFOGLIOORDINI).'}),"\n",(0,r.jsx)(n.p,{children:"For both synchronous and asynchronous modes, it is possible to retrieve the list of portfolio availability by filtering for individual items and their variants."}),"\n",(0,r.jsx)(n.p,{children:'Example with "tipoEvadiblit\xe0":1, which means searching for portfolio order availability by item and filtering by variant:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "LimiteEvadibilita": 1,\n    "tipoEvadibilita": 1,\n    "codart":"{{Articolo1}}",\n    "variante":"{{Variante}}",\n    "IsAsyncMode": "false",\n    "MinExpire": "180"\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:'In the body of the call, it is important to correctly specify the "variant" filter by exactly following the indication scheme configured in the TSE management system, that is, indicating the variants with the same number of characters as configured in the management system.'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The delete operation allows you to remove the set of processes for GuidSession."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The Lookup Borderaux allows the display of a list of document rows with shipment data in a styled format borderaux"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"A Lookup is also available that allows the display of a list of document rows with shipment data in Borderaux style, by executing the following call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/MG/Lookup/BorderauxMG?metadata=true&company={{defaultCompany}}&_op=search\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"document-transformation-1-to-n-ddt-fulfillment-and-invoice-generation",children:"Document Transformation 1 to n (DDT Fulfillment and Invoice Generation)"}),"\n",(0,r.jsx)(n.p,{children:"Starting from a source document, multiple destination documents can be automatically generated (Document Transformation 1 to n) through the configuration of the Line Break on the document transformation model used. The line break elements are those managed in the ERP:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Article payment"}),"\n",(0,r.jsx)(n.li,{children:"Warehouse reason"}),"\n",(0,r.jsx)(n.li,{children:"Deposit"}),"\n",(0,r.jsx)(n.li,{children:"Linked deposit"}),"\n",(0,r.jsx)(n.li,{children:"Location"}),"\n",(0,r.jsx)(n.li,{children:"Division"}),"\n",(0,r.jsx)(n.li,{children:"Article 62 goods indicator"}),"\n",(0,r.jsx)(n.li,{children:"CIG/CUP"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Simulating a document transformation call for line break by deposit, the response returns n numRegDestination for each line deposit present in the source document, where the coddepMg58 (line deposit) is valued differently for each article line in the source document (DDT).\nIn the chosen Transformation model for the call, the line break by deposit is defined through the Interface. At this point, the call is made to perform the document transformation, indicating the source document registration number (DDT) and the specific transformation model (which manages the line break by deposit) to generate the corresponding n invoices. The response will return n destination registration numbers related to the generated invoices, corresponding to each line deposit managed in the source document."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n {\n {\n    "numRegDestination": [\n        "202400000494",\n        "202400000495"\n    ]\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"document-transformation-n-to-n",children:"Document Transformation n to n"}),"\n",(0,r.jsx)(n.p,{children:"Upon entering a supplier order with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimal mandatory header information"}),"\n",(0,r.jsx)(n.li,{children:"Two article lines, with different article codes and quantities"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A call is then made to perform the Document Transformation into DDT, indicating the source registration number and the related transformation model, while the response retrieves the registration number of the generated DDT."}),"\n",(0,r.jsx)(n.p,{children:"Some use cases are provided as examples, including the relevant body of the call:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete fulfillment of a document, with the source document number carried over to the destination document"}),":"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:['To correctly carry over the source document to the destination document to be generated, it is necessary to fill in the parameter "DocumentTransformationProcessExtremLimitDTO" and set ',(0,r.jsx)(n.code,{children:"AcceptDocMode = 1"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "numRegOrigin": ["202400000288"],\n    "codModelTransfDoc": "{{TrasformazioneORD-DDT}}",\n    "processExtremLimits": {\n        "acceptDocMode": 1,\n        "destinationDocParams": {\n            "dataReg": "2024-10-14",\n            "dataDoc": "2024-10-14",\n            "dataCompVatMan": "2024-10-14",\n            "sezdoc": "00",\n            "numDoc": 101.0,\n            "numDocOrig": 19.0\n        }\n    }\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Simultaneously with the document transformation, it is also possible to apply one or more filters, defined in SearchDTO."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'Partial fulfillment of one or more document lines, specifying only the "progrRiga" of the source document'}),":"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If you want to partially fulfill one or more document lines, you also need to specify the additional parameters in ",(0,r.jsx)(n.code,{children:"DocumentTransformationPartialEvadContainerGeneralDataDTO"})," for each ",(0,r.jsx)(n.code,{children:"numRegOrigin"})," in the request."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"numRegOrigin  - obbligatorio (Registration number to be transformed)"}),"\n",(0,r.jsx)(n.li,{children:"progrRiga - obbligatorio (Line number corresponding to the document line to be transformed)"}),"\n",(0,r.jsx)(n.li,{children:"qtaTransf - obbligatorio (The quantity to be carried over to the destination document)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "numRegOrigin": ["202400002619"],\n    "codModelTransfDoc": "1-FOR-ORDDDT",\n    "processExtremLimits": {\n        "acceptDocMode": 1,\n        "destinationDocParams": {\n            "dataReg": "2024-10-01T09:29:27.355Z",\n            "dataDoc": "2024-10-01T09:29:27.355Z",\n            "dataCompVatMan": "2024-10-01T09:29:27.355Z",\n            "sezdoc": "00",\n            "numDoc": 42,\n            "numDocOrig": 44\n        }\n    },\n    "documentTransformationPartialEvadContainerGeneralData": [\n        {\n            "numRegOrigin": "202400002619",\n            "documentTransformationGeneralData": [\n                {\n                    "progrRiga": 1,\n                    "qtaTransf": 2\n                },\n                {\n                    "progrRiga": 2,\n                    "qtaTransf": 4\n                }\n            ]\n        }\n    ]\n}  \n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Partial fulfillment of n source documents, also applying any price variations and percentage discounts"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you want to fulfill the order with any price or discount variations or surcharges compared to the source document, you need to fill in the appropriate corresponding parameters. If you want to maintain the commercial conditions of the source document, these parameters should not be included in the request."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "numRegOrigin": [\n        "202400002730",\n        "202400002731"\n    ],\n    "codModelTransfDoc": "1-FOR-ORDDDT",\n    "processExtremLimits": {\n        "acceptDocMode": 1,\n        "destinationDocParams": {\n            "dataReg": "2024-10-14T09:29:27.355Z",\n            "dataDoc": "2024-10-14T09:29:27.355Z",\n            "dataCompVatMan": "2024-10-14T09:29:27.355Z",\n            "sezdoc": "00",\n            "numDoc": 104,\n            "numDocOrig": 96\n        }\n    },\n    "documentTransformationPartialEvadContainerGeneralData": [\n        {\n            "numRegOrigin": "202400002730",\n            "documentTransformationGeneralData": [\n                {\n                    "progrRiga": 1,\n                    "qtaTransf": 5,\n                    "price1": 300,\n                    "scper1": 2\n                },\n                {\n                    "progrRiga": 2,\n                    "qtaTransf": 3,\n                    "price1": 100,\n                    "scper1": 2.5\n                }\n            ]\n        },\n{\n            "numRegOrigin": "202400002731",\n            "documentTransformationGeneralData": [\n                {\n                    "progrRiga": 1,\n                    "qtaTransf": 2\n                },\n                {\n                    "progrRiga": 2,\n                    "qtaTransf": 4\n                }\n            ]\n        }\n    ]\n}\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete fulfillment of n documents, applying a filter by article code"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "numRegOrigin": [\n        "202400002401",\n        "202400002402"\n    ],\n    "codModelTransfDoc": "1-FOR-ORDDDT",\n    "processExtremLimits": {\n        "acceptDocMode": 1,\n        "destinationDocParams": {\n            "dataReg": "2024-10-04",\n            "dataDoc": "2024-10-04",\n            "dataCompVatMan": "2024-10-04",\n            "sezdoc": "00",\n            "numDoc": 102.0,\n            "numDocOrig": 76.0\n        }\n    },\n    "rowSearchTransformationCriteria": {\n        "filters": {\n            "items": [\n                {\n                    "operator": 0,\n                    "comparer": 0,\n                    "propertyName": "CodartMg66",\n                    "value": "{{Articolo1}}"\n                }\n            ]\n        }\n    }\n}\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'Partial fulfillment of a document, partially fulfilling the first line and declaring the second line as "No longer fulfillable" for the remaining quantity'}),":"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If, during the partial fulfillment of a document, you want to declare a document line as No longer fulfillable, you need to set the ",(0,r.jsx)(n.code,{children:"rowNotEvad"}),' parameter to "true" for the corresponding ',(0,r.jsx)(n.code,{children:"progrRiga"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "numRegOrigin": [\n        "202400002889"\n    ],\n    "codModelTransfDoc": "1-FOR-ORDDDT",\n    "documentTransformationPartialEvadContainerGeneralData": [\n        {\n            "numRegOrigin": "202400002889",\n            "documentTransformationGeneralData": [\n                {\n                    "progrRiga": 1,\n                    "indtiporiga": 0,\n                    "qtaTransf": 3.0\n                },\n                {\n                    "indtiporiga": 0,\n                    "progrRiga": 2,\n                    "qtaTransf": 4.0,\n                    "rowNotEvad": true\n                }\n            ]\n        }\n    ]\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"bulk-document-insertion",children:"Bulk Document Insertion"}),"\n",(0,r.jsx)(n.p,{children:"The attached example presents the scenario of an integrated vertical for warehouse management that allows the bulk insertion of multiple documents, for example, 3 immediate invoice documents, composed of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"8 article lines"}),"\n",(0,r.jsx)(n.li,{children:"1 line with a KIT article"}),"\n",(0,r.jsx)(n.li,{children:"1 line with a manual article"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The response of the bulk document insertion call will release a ",(0,r.jsx)(n.code,{children:"GuidSession"})," that can be queried using ",(0,r.jsx)(n.code,{children:"Lookup"}),".\nThere are two types of ",(0,r.jsx)(n.code,{children:"Lookup"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analytical Detail"}),": Returns a list with analytical details related to the progress status of the bulk document insertion processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Structured List"}),": Returns a structured list to check the progress status of the bulk document insertion processing."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"delete"})," operation allows you to delete the set of processes for ",(0,r.jsx)(n.code,{children:"GuidSession"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"In the event that, following Bulk Document Insertion, some of these documents are in an error state, it is possible, after identifying and correcting the error on the document, to use the reprocessing service. This service allows you to proceed with the insertion of the corrected documents that were in error"}),"\n",(0,r.jsx)(n.h2,{id:"external-price-list-acquisition-service-ieimportli",children:"External Price List Acquisition: Service IEImportLI"}),"\n",(0,r.jsx)(n.p,{children:"The IEImportLI service allows the import of price lists provided by third parties in different formats (supported formats: excel/csv). Through this service, it is possible to import an article price list for a specific supplier from an external file in synchronous or asynchronous mode, using a specific import template."}),"\n",(0,r.jsx)(n.p,{children:"To perform the price list import from an external file, the following call must be made:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/LI/IEImportLI/pricelist?company={{defaultCompany}}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The service retrieves the parameters from ",(0,r.jsx)(n.code,{children:"ImportParameterDTO"})," and returns in the response in ",(0,r.jsx)(n.code,{children:"ImportExportResultDTO"})," the number of rows successfully imported and the number of rows not imported with the corresponding error report."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"ImportParameterDTO"})}),"\n",(0,r.jsx)(n.p,{children:"CodLayout - mandatory (Trace code to be used for the import)\nTypeSalePurchase - mandatory (Price list type: 0 = Sales, 1 = Purchase)\nStreamFileImport \u2013 mandatory (File to be imported in Base64 format)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"ImportExportResultDTO"})}),"\n",(0,r.jsx)(n.p,{children:"guidSession - processing guid\nstateProcess - processing status\nidStateProcess - ID corresponding to the processing status\nheadProcess:\nguidResult - Import result guid\ntotRowImpExp-  Total number of rows to import\nimpExpWithErrors\nrowElab - Rows subject to import\ntypeResult - id corresponding to the import result\ntypeResultDescription - information\ndescription - description of import notes and any errors"}),"\n",(0,r.jsx)(n.p,{children:"Inoltre sono disponibili le chiamate su entit\xe0 di base, necessarie per effettuare l'importazione listini fornitore: LayoutCO con dettaglio IELayoutCODTO per recuperare il codice tracciato da utilizzare, StructureType con dettaglio IEStructureTypeCODTO e StructureSubType con dettaglio IEStructureSubTypeCODTO che corrispondono al Tipo struttura e Sottotipo struttura legati al tracciato in uso."}),"\n",(0,r.jsx)(n.p,{children:"Additionally, the following base entity calls are available, necessary for importing supplier price lists: LayoutCO with detail IELayoutCODTO to retrieve the tracking code to use, StructureType with detail IEStructureTypeCODTO, StructureSubType with detail IEStructureSubTypeCODTO, corresponding to the structure type and substructure type related to the layout in use."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/CO/IEStructureTypeCO/{{CodStructureType}}?company={{defaultCompany}}\nwebapi_base_url/api/v1/{{scope}}/CO/IEStructureSubTypeCO/{{CodStructureSubType}}?company={{defaultCompany}}\nwebapi_base_url/api/v1/{{scope}}/CO/IELayoutCO/{{CodLayout}}?company={{defaultCompany}}&CodStructureType={{CodStructureType}}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The service only accepts layouts with CodStructureType = 18 (Item Price List) and CodStructureSubType = 4 (Customer/Supplier Price List)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.p,{children:'The example provided imports a supplier price list from an external file converted to Base64 (indicated in "StreamFileImport"), based on the layout previously defined in the ERP and setting the mandatory parameters.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "TypeSalePurchase" : "1",\n\xa0 \xa0 "CodLayout": "{{CodLayout}}",\n\xa0 \xa0 "StreamFileImport":\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"During the import of the supplier price list, it is also possible to simultaneously:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Create new items (present in the file and not present in the ERP) by setting the parameter "insertNewItem": true (default is false).'}),"\n",(0,r.jsx)(n.li,{children:'Update existing items by setting the parameter "updateInsertPriceList": true (default is false).'}),"\n",(0,r.jsx)(n.li,{children:'Override the validity period of the price list compared to that defined in the file using the parameters "forceBeginDate" and "forceEndDate".'}),"\n",(0,r.jsx)(n.li,{children:'Update a price list with the same validity period by setting the parameter "updatePriceList": true.'}),"\n",(0,r.jsx)(n.li,{children:"Override the unit of measure, currency code, or customer code compared to the external file."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'This functionality can be managed by also defining the parameter element "addParameters" in the body of the call.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "addParameters": {\n\xa0 \xa0 \xa0 \xa0 "forceTypeInUseOrToExpect": "0",\n\xa0 \xa0 \xa0 \xa0 "insertNewItem": false,\n\xa0 \xa0 \xa0 \xa0 "updateExistingItem": false,\n\xa0 \xa0 \xa0 \xa0 "forceBeginDate": "1900-01-01T08:18:28.461Z",\n\xa0 \xa0 \xa0 \xa0 "forceEndDate": "2099-12-31T08:18:28.461Z",\n\xa0 \xa0 \xa0 \xa0 "dateUpdate": "2024-08-07T08:18:28.461Z",\n\xa0 \xa0 \xa0 \xa0 "updateInsertPriceList": true,\n\xa0 \xa0 \xa0 \xa0 "updatePriceList": false,\n\xa0 \xa0 \xa0 \xa0 "forceTypeUnitOfMeasure": "1",\n\xa0 \xa0 \xa0 \xa0 "forceCodCurrency": null,\n\xa0 \xa0 \xa0 \xa0 "forceCodCustomerSupplier": null\n\xa0 \xa0 },\n\xa0 \xa0 "isAsyncMode": false,\n\xa0 \xa0 "TypeSalePurchase" : "1",\n\xa0 \xa0 "CodLayout": "{{CodLayout}}",\n\xa0 \xa0 "StreamFileImport":\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["At the end of the import, the response displays the processing result in ",(0,r.jsx)(n.strong,{children:"ImportExportResultDTO"}),", the number of rows imported, and any error notifications."]}),"\n",(0,r.jsxs)(n.p,{children:["The supplier price list import can also be executed in ",(0,r.jsx)(n.em,{children:"asynchronous"})," mode by setting the mandatory parameter ",(0,r.jsx)(n.strong,{children:'"isAsyncMode" to true'})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "TypeSalePurchase" : "1",\n\xa0 \xa0 "isAsyncMode": true,\n\xa0 \xa0 "CodLayout": "{{CodLayout}}",\n\xa0 \xa0 "StreamFileImport":\n\xa0}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this case, the response displays the ",(0,r.jsx)(n.strong,{children:"guidSession"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "guidSession": "2718c758-7ec2-46a3-8f2a-57faaa0a5ac9",\n\xa0 \xa0 "stateProcess": "Inserted",\n\xa0 \xa0 "idStateProcess": 0,\n\xa0 \xa0 "headProcess": null\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["At this momen, to retrieve the processing result in ImportExportResultDTO, it is necessary to use the ",(0,r.jsx)(n.strong,{children:"IEServiceCO"})," service by making a call of type GET:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/CO/IEServiceCO/{{guidSession}}?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "guidSession": "2718c758-7ec2-46a3-8f2a-57faaa0a5ac9",\n\xa0 \xa0 "stateProcess": "Terminate",\n\xa0 \xa0 "idStateProcess": 2,\n\xa0 \xa0 "headProcess": {\n\xa0 \xa0 \xa0 \xa0 "guidResult": "4E175429D751488D985891CCCAFA92D8",\n\xa0 \xa0 \xa0 \xa0 "totRowImpExp": 7,\n\xa0 \xa0 \xa0 \xa0 "impExpWithErrors": false,\n\xa0 \xa0 \xa0 \xa0 "rowElab": [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "typeResult": 1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "typeResultDescription": "Information",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "description": "Importazione terminata.\\r\\nNumero di righe importate correttamente: 7 \\r\\nNumero di righe non importate: 0"\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 }\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"export-and-import-of-customers-or-suppliers-from-external-sources-service-ieimportco-and-ieexportco",children:"Export and Import of Customers or Suppliers from External Sources: Service IEImportCO and IEExportCO"}),"\n",(0,r.jsx)(n.p,{children:"The IEExportCO service allows exporting customers or suppliers from TSE, generating a stream file, while the IEImportCO service allows importing customers or suppliers via a file provided by third parties. The supported file formats are Excel and CSV. The export of customers and/or suppliers generates a stream file that can be converted into a CSV or Excel file.\nThrough these services, it is possible to export one or more customers and/or suppliers or import them from a file. By creating a specific layout defined in the ERP and using specific parameters, it is possible to automatically create the related records or update them if they already exist."}),"\n",(0,r.jsx)(n.p,{children:'The service can be executed in both synchronous and asynchronous modes using the parameter "isAsyncMode".'}),"\n",(0,r.jsx)(n.h2,{id:"import-customerssuppliers",children:"Import Customers/Suppliers"}),"\n",(0,r.jsx)(n.p,{children:"To perform the import of customers/suppliers from an external file, the following call must be made:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/CO/IEImportCO/customersupplier?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The service retrieves the parameters from ImportParameterDTO and returns in the response, within ImportExportResultDTO, the number of rows imported correctly and the number of rows not imported, along with the corresponding error notifications"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"ImportParameterDTO"})}),"\n",(0,r.jsx)(n.p,{children:"isAsyncMode - mandatory (Import Mode - Synchronous (true) or Asynchronous (false))\nCodLayout - mandatory (Tracking Code to Use for the Import)\nStreamFileImport \u2013 mandatory (File to Import in Base64 Format)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"ImportExportResultDTO"})}),"\n",(0,r.jsx)(n.p,{children:"guidSession - processing guid\nstateProcess - processing status\nidStateProcess - ID corresponding to the processing status\nheadProcess:\nguidResult - Import result guid\ntotRowImpExp-  Total number of rows to import\nimpExpWithErrors\nrowElab - Rows subject to import\ntypeResult - id corresponding to the import result\ntypeResultDescription - information\ndescription - description of import notes and any errors"}),"\n",(0,r.jsx)(n.p,{children:"The service only accepts layouts with CodStructureType = 2 (Customer/Supplier Records) and CodStructureSubType = 0.\nThe file to be imported must be converted to Base64 format to be imported by the service."}),"\n",(0,r.jsx)(n.p,{children:"During the import of customers and/or suppliers, it is also possible to simultaneously:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'create new customers and/or suppliers (present in the file and not present in the ERP) by setting the parameter "insertCustomerSupplier": true (default is false).'}),"\n",(0,r.jsx)(n.li,{children:'update existing customers and/or suppliers by setting the parameter "updateExistingCustomerSupplier": true (default is false).'}),"\n",(0,r.jsx)(n.li,{children:'define the import mode (as per ERP) using the parameter "typeImportModeCustomerSupplier" (default is 0, which corresponds to "All Records").'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'This functionality can be managed by also defining the parameter element "addParameters" in the body of the call:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n  "addParameters": {\n    "typeImportModeCustomerSupplier": "0",\n    "insertCustomerSupplier": true,\n    "updateExistingCustomerSupplier": true\n  },\n    "isAsyncMode": false,\n    "CodLayout": "{{CodLayout}",\n    "StreamFileImport": " "\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["At the end of the import, the response displays the processing result in ",(0,r.jsx)(n.strong,{children:"ImportExportResultDTO"}),", the number of rows imported, and any error notifications."]}),"\n",(0,r.jsxs)(n.p,{children:["The import of customers/suppliers can also be executed in ",(0,r.jsx)(n.em,{children:"asynchronous"})," mode by setting the mandatory parameter ",(0,r.jsx)(n.strong,{children:'"isAsyncMode: true"'}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "isAsyncMode": true,\n\xa0 \xa0 "CodLayout": "{{CodLayout}}",\n\xa0 \xa0 "StreamFileImport":\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this moment, the response return the ",(0,r.jsx)(n.strong,{children:"guidSession"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "guidSession": "2718c758-7ec2-46a3-8f2a-57faaa0a5ac9",\n\xa0 \xa0 "stateProcess": "Inserted",\n\xa0 \xa0 "idStateProcess": 0,\n\xa0 \xa0 "headProcess": null\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To retrieve the processing result in ImportExportResultDTO, it is necessary to use the ",(0,r.jsx)(n.strong,{children:"IEServiceCO"})," service by making a GET call and indicating the guidSession from the previous response."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/CO/IEServiceCO/{{guidSession}}?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 \xa0 "guidSession": "2718c758-7ec2-46a3-8f2a-57faaa0a5ac9",\n\xa0 \xa0 "stateProcess": "Terminate",\n\xa0 \xa0 "idStateProcess": 2,\n\xa0 \xa0 "headProcess": {\n\xa0 \xa0 \xa0 \xa0 "guidResult": "4E175429D751488D985891CCCAFA92D8",\n\xa0 \xa0 \xa0 \xa0 "totRowImpExp": 7,\n\xa0 \xa0 \xa0 \xa0 "impExpWithErrors": false,\n\xa0 \xa0 \xa0 \xa0 "rowElab": [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "typeResult": 1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "typeResultDescription": "Information",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 "description": "Importazione terminata.\\r\\nNumero di righe importate correttamente: 7 \\r\\nNumero di righe non importate: 0"\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 }\n}\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"export-customerssuppliers",children:"Export Customers/Suppliers"}),"\n",(0,r.jsx)(n.p,{children:"To export customers/suppliers and generate a Streamfile, the following call must be made:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"webapi_base_url/api/v1/{{scope}}/CO/IEExportCO/customersupplier?company={{defaultCompany}}\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the body of the request, you must specify the tracking code to use (previously created via the interface). You need to define whether the export is performed in synchronous or asynchronous mode, and it is also possible to define any additional parameters, as provided by the interface."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n\xa0 "addParameters": {\n\xa0 \xa0 "selectionValidityGeneralMasterData": "0",\n\xa0 \xa0 "referenceValidDate": "2024-11-11T08:18:28.461Z"\n\xa0 },\n\xa0 \xa0 "isAsyncMode": false,\n\xa0 \xa0 "CodLayout": "{{CodLayout}}"\n}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:'With the parameter "selectionValidityGeneralMasterData", you can choose to export all valid master data, only those valid on the system date, or only those valid from a specific date defined in the next parameter "referenceValidDate".'}),"\n",(0,r.jsx)(n.p,{children:"In the body of the response, any error messages are reported, and the streamfile is generated in 64-bit format, which must be converted by the user"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use of Filters"}),"\nAs per the interface, it is also possible to apply extraction filters using the Search function.\nIn the example below, all valid master data is exported, and the extraction criterion 'tipocf' is used, so all supplier master data is exported."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n{\n    "addParameters": {\n        "selectionValidityGeneralMasterData": "1"\n    },\n    "isAsyncMode": false,\n    "CodLayout": "{{CodLayoutClifor}}",\n    "searchFilter": {\n        "filters": {\n            "operator": 0,\n            "items": [\n                {\n                    "operator": 0,\n                    "comparer": 0,\n                    "propertyName": "tipocf",\n                    "value": "1"\n                }\n            ]\n        }\n    }\n}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NOTE"}),": If the user wants to extract data according to a criterion not managed by the Search, it is reminded that an additional criterion can be defined in the current track, using the 'Import Conditions' in case of import or the 'Export Conditions' in case of export. Choose the Advanced Mode and specify the criterion using an SQL statement."]}),"\n",(0,r.jsx)(n.p,{children:"For example, if you want to export only customers belonging to the Area ITA code and the Zone NOR code, the SQL statement is:"}),"\n",(0,r.jsx)(n.p,{children:"[Codice_area] = 'ITA' AND [Codice_zona] = 'NOR'"}),"\n",(0,r.jsx)(n.p,{children:"In this case, the track must include the area code and zone code among the exportable fields."}),"\n",(0,r.jsx)(n.h2,{id:"journal-entries",children:"Journal Entries"}),"\n",(0,r.jsxs)(n.p,{children:["The resource ",(0,r.jsx)(n.code,{children:"GLEntryFI"})," can be used to enter journal entries in TSE.\nAlthough the same resource can be used for entering any type of journal entry, the application scenario currently supported on the cloud is the entry of a Customer Sales Invoice with Due Dates."]}),"\n",(0,r.jsx)(n.p,{children:"Regarding Swagger, refer to the following service: FI / GLEntryFI / multiplecreatejob."}),"\n",(0,r.jsx)(n.p,{children:"The journal entry scenarios are made available directly in Swagger within the POST (Create) call and in the POST of the multiplecreatejob of the IntegrationFI\\GLEntryFI module, with some examples.:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(66891).A+"",width:"1417",height:"876"})}),"\n",(0,r.jsx)(n.p,{children:'Using the "Try it out" feature, you can automatically execute the call by replacing the placeholders indicated in the examples with the appropriate data.'}),"\n",(0,r.jsx)(n.p,{children:"Available multiplecreatejob examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default (complete): provides the complete call body;"}),"\n",(0,r.jsx)(n.li,{children:"Supplier Invoice: supplier purchase invoice;"}),"\n",(0,r.jsx)(n.li,{children:"Supplier Invoice Payment: supplier purchase invoice payment;"}),"\n",(0,r.jsx)(n.li,{children:"Customer Invoice with due dates and deposit: customer sales invoice with deposit and due dates;"}),"\n",(0,r.jsx)(n.li,{children:"Supplier Invoice reverse charge: supplier purchase invoice in reverse charge."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supplier Invoice/Payment"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supplier VAT transaction (reason code 31) without due dates;"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"1 counterpart with VAT code (22%) on purchase account"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(95600).A+"",width:"1542",height:"343"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Supplier invoice payment","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reason paid invoice (100) with supplier reference document number;"}),"\n",(0,r.jsx)(n.li,{children:"1 Supplier line;"}),"\n",(0,r.jsx)(n.li,{children:"1 Bank counterpart line"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(1849).A+"",width:"1550",height:"320"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Customer Invoice with due dates and deposit"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Customer VAT transaction (reason code 1) with 2 accounts and 2 VAT liabilities at 22% with deposit reversal","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 counterpart with VAT code (22%) on revenue account"}),"\n",(0,r.jsx)(n.li,{children:"1 counterpart with VAT code (22%) on customer advances account"}),"\n",(0,r.jsx)(n.li,{children:"3 due dates (30/60/90)\nThe deposit line present in the invoice is entered as a value line with a negative amount."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(52454).A+"",width:"1548",height:"684"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supplier Invoice reverse charge"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Supplier VAT transaction (e.g., reason code 91) with reverse charge VAT code","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 counterpart with reverse charge VAT code"}),"\n",(0,r.jsx)(n.li,{children:"1 due date of direct remittance type"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(91471).A+"",width:"1055",height:"700"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Notes"}),": The attached example uses the reason code 91 Purchase invoice art.17 c.5 DPR 633/72 with an Italian supplier. The same example is valid for all reverse charge reasons:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"51 Intra-community purchase invoice (Cee supplier)"}),"\n",(0,r.jsx)(n.li,{children:"96 Purchase invoice subject to non-residents (art.17 c.3) (Extracee supplier)"}),"\n",(0,r.jsx)(n.li,{children:"41 Purchase invoice RSM (San Marino supplier)"}),"\n",(0,r.jsx)(n.li,{children:"93 Purchase invoice art.17-ter DPR 633/72 (split payment supplier)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"with the following code details in the call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n{\n\n    "data": {\n        "items": [\n            {\n                "vatReverseIncoporated": true,\n                "recoverReverseChargeIfNotDefined": true,\n                "externalRif": "60",\n                "ExternalInfo": {},\n                ....\n            }\n                ]\n            }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"We also provide the following code details related to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supplier VAT transaction with withholding tax"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'// body content\n\t\t\t"WtPurchases": [\n\t\t\t\t{\n\t\t\t\t\t"codTribrp": "",\n\t\t\t\t\t"codTributo": "1040",\n\t\t\t\t\t"contcditta": 0.0,\n\t\t\t\t\t"contcperc": 0.0,\n\t\t\t\t\t"contribint": 0.0,\n\t\t\t\t\t"datareg": "{{dataReg}}",\n\t\t\t\t\t"dittaCg18": {{defaultCompany}},\n\t\t\t\t\t"enasazienda": 0.0,\n\t\t\t\t\t"flgSegno": 0,\n\t\t\t\t\t"imponibilera": 100.00,\n\t\t\t\t\t"imponibilerp": 100.00,\n\t\t\t\t\t"importoalrit": 0.0,\n\t\t\t\t\t"importora": 20.00,\n\t\t\t\t\t"ind770": 1,\n\t\t\t\t\t"percra": 20.0,\n\t\t\t\t\t"percrp": 0.0,\n\t\t\t\t\t"provvnonsog": 0.0,\n\t\t\t\t\t"rimborsi": 0.00,\n\t\t\t\t\t"generalMasterDataCODTO": {\n\t\t\t\t\t\t"codice": {{idAnagProfessionista}}\n\t\t\t\t\t},\n\t\t\t\t\t"sectionalMasterDataCODTO": {\n\t\t\t\t\t\t"dittaCg18": {{defaultCompany}},\n\t\t\t\t\t\t"sezionale": "00"\n\t\t\t\t\t},\n\t\t\t\t\t"wtCodeCODTO": {\n\t\t\t\t\t\t"codice": "101 "\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n            \n'})}),"\n",(0,r.jsx)(n.p,{children:"Available examples in GLEntryFI:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default (complete): provides the complete call body;"}),"\n",(0,r.jsx)(n.li,{children:"Accounting transfer: accounting transfer."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Accounting transfer"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"NON-VAT transaction (reason 109)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 Supplier line (supplier debts);"}),"\n",(0,r.jsx)(n.li,{children:"1 transitional account line;"}),"\n",(0,r.jsx)(n.li,{children:"1 Customer counterpart line"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt text",src:t(16980).A+"",width:"1570",height:"357"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Property tipoDoc - document type"}),"\nTo ensure consistency in the VAT transaction registration, it is recommended to pass the property tipoDoc (document type) among the header values, setting it coherently with the relevant VAT reason."]}),"\n",(0,r.jsx)(n.p,{children:"Below are the values to pass based on the relevant reason:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"PURCHASES\nVAT reason in (31, 41, 51, 71, 91, 93, 96) -> tipoDoc = 2\nVAT reason = 32 -> tipoDoc = 1\nVAT reason = 33 -> tipoDoc = 14\nVAT reason in (35, 42, 52, 92, 94, 97) -> tipoDoc = 5\nVAT reason = 37 -> tipoDoc = 7\nVAT reason = 39 -> tipoDoc = 9"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"SALES\nVAT reason in (1, 61, 281) -> tipoDoc = 1\nVAT reason = 2 -> tipoDoc = 13\nVAT reason in (5, 63, 285) -> tipoDoc = 4\nVAT reason = 7 -> tipoDoc = 6\nVAT reason = 9 -> tipoDoc = 8\nVAT reason = 62 -> tipoDoc = 10"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Creation of VAT lines"})}),"\n",(0,r.jsxs)(n.p,{children:["For each journal entry, it is possible to specify through the parameter ",(0,r.jsx)(n.code,{children:"autoVatRow"})," whether to calculate the lines automatically (true) or pass them externally (false). By default, the parameter is set to false."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Creation of due dates"})}),"\n",(0,r.jsx)(n.p,{children:"Currently, they are not measured through payment conditions and therefore must always be passed. Note: the amount of the due date installments and the related VAT must match the total document amount."}),"\n",(0,r.jsx)(n.h2,{id:"unsupported-managements",children:"Unsupported Managements"}),"\n",(0,r.jsx)(n.p,{children:"Below is a list of particular managements currently not supported when inserting a document via WebAPI:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Risk control"}),"\n",(0,r.jsx)(n.li,{children:"Explosion of multiple item cards"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},66891:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-1-36448cda21db02132a9bf40a5e8f6e71.png"},95600:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-2-005f1dfd50adf7620234722f431fcbbb.png"},1849:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-3-04671e0838bef53f0f3cfe819e8a75d9.png"},52454:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-4-31294d3bd66cf71ee16e8c13bb8d53e8.png"},91471:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-5-a10cdfbc479a3114c452710412925fe0.png"},16980:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-6-919bdcf1d6d52f0ff5aea678c99f9b89.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);