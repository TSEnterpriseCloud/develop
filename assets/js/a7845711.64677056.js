"use strict";(self.webpackChunktse_dev_api=self.webpackChunktse_dev_api||[]).push([[269],{39845:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"scenario/invoice-creation","title":"Invoice creation","description":"Learn the basics about building an invoice","source":"@site/docs/scenario/invoice-creation.mdx","sourceDirName":"scenario","slug":"/scenario/invoice-creation","permalink":"/develop/docs/scenario/invoice-creation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scenario/invoice-creation.mdx","tags":[{"inline":true,"label":"guides","permalink":"/develop/docs/tags/guides"},{"inline":true,"label":"invoice","permalink":"/develop/docs/tags/invoice"},{"inline":true,"label":"invoice creation","permalink":"/develop/docs/tags/invoice-creation"},{"inline":true,"label":"issued documents","permalink":"/develop/docs/tags/issued-documents"},{"inline":true,"label":"payments","permalink":"/develop/docs/tags/payments"},{"inline":true,"label":"attachment","permalink":"/develop/docs/tags/attachment"},{"inline":true,"label":"client","permalink":"/develop/docs/tags/client"},{"inline":true,"label":"customer","permalink":"/develop/docs/tags/customer"},{"inline":true,"label":"e-invoice","permalink":"/develop/docs/tags/e-invoice"},{"inline":true,"label":"items","permalink":"/develop/docs/tags/items"},{"inline":true,"label":"totals","permalink":"/develop/docs/tags/totals"},{"inline":true,"label":"sdkf","permalink":"/develop/docs/tags/sdkf"},{"inline":true,"label":"code example","permalink":"/develop/docs/tags/code-example"},{"inline":true,"label":"c#","permalink":"/develop/docs/tags/c"},{"inline":true,"label":"java","permalink":"/develop/docs/tags/java"},{"inline":true,"label":"javascript","permalink":"/develop/docs/tags/javascript"},{"inline":true,"label":"php","permalink":"/develop/docs/tags/php"},{"inline":true,"label":"python","permalink":"/develop/docs/tags/python"},{"inline":true,"label":"ruby","permalink":"/develop/docs/tags/ruby"},{"inline":true,"label":"typescript","permalink":"/develop/docs/tags/typescript"},{"inline":true,"label":"zapier","permalink":"/develop/docs/tags/zapier"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Invoice creation","slug":"invoice-creation","description":"Learn the basics about building an invoice","tags":["guides","invoice","invoice creation","issued documents","payments","attachment","client","customer","e-invoice","items","totals","sdkf","code example","c#","java","javascript","php","python","ruby","typescript","zapier"]},"sidebar":"tutorialSidebar","previous":{"title":"Scenario","permalink":"/develop/docs/scenario/"},"next":{"title":"Master Data","permalink":"/develop/docs/scenario/Ana-creation"}}');var s=t(74848),a=t(28453),r=t(11470),o=t(19365);const d={sidebar_position:1,title:"Invoice creation",slug:"invoice-creation",description:"Learn the basics about building an invoice",tags:["guides","invoice","invoice creation","issued documents","payments","attachment","client","customer","e-invoice","items","totals","sdkf","code example","c#","java","javascript","php","python","ruby","typescript","zapier"]},c=void 0,l={},u=[{value:"\u2139\ufe0f\xa0 Pre-Create Info",id:"information_source-pre-create-info",level:2},{value:"0\ufe0f\u20e3\xa0 Step Zero: The Document Type",id:"zero-step-zero-the-document-type",level:2},{value:"1\ufe0f\u20e3\xa0 Step One: The Customer",id:"one-step-one-the-customer",level:2},{value:"2\ufe0f\u20e3\xa0 Step Two: The Invoice Data",id:"two-step-two-the-invoice-data",level:2},{value:"3\ufe0f\u20e3\xa0 Step Three: E-Invoice",id:"three-step-three-e-invoice",level:2},{value:"4\ufe0f\u20e3\xa0 Step Four: Contributions and Withholdings",id:"four-step-four-contributions-and-withholdings",level:2},{value:"5\ufe0f\u20e3\xa0 Step Five: Items list",id:"five-step-five-items-list",level:2},{value:"6\ufe0f\u20e3\xa0 Step Six: Payments List",id:"six-step-six-payments-list",level:2},{value:"7\ufe0f\u20e3\xa0 Step Seven: Advanced Options",id:"seven-step-seven-advanced-options",level:2},{value:"8\ufe0f\u20e3\xa0 Step Eight: Attachment",id:"eight-step-eight-attachment",level:2},{value:"9\ufe0f\u20e3\xa0 Step Nine: Customisation",id:"nine-step-nine-customisation",level:2},{value:"\u2705\xa0 Create the document!",id:"white_check_mark-create-the-document",level:2},{value:"\ud83d\udcec\xa0 Send the document",id:"mailbox_with_mail-send-the-document",level:2},{value:"\ud83d\ude80\xa0 Send the E-Invoice to the SDI",id:"rocket-send-the-e-invoice-to-the-sdi",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["If you are struggling to create a new invoice with our API this is the place where you want to be, you will learn every step to successfully ",(0,s.jsx)(n.strong,{children:"create your invoice from scratch"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"We'll build the request step by step, so wait until the end of the guide to send your first request!"}),"\n",(0,s.jsxs)(n.p,{children:["You can find the technical documentation of this API method ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/issued_documents",children:"here"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Some of the steps will use other API methods to create or retrieve the needed resources. You can find the required models on our ",(0,s.jsx)(n.a,{href:"/api-reference",children:"API Reference"})," section or on the documentation of the ",(0,s.jsx)(n.a,{href:"/develop/docs/sdks/",children:"SDK"})," you're using (check the GitHub repo or the Package Manager page)."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to download the complete SDKs examples you can find them ",(0,s.jsx)(n.a,{href:"https://github.com/enterprisecloud/enterprisecloud-quickstarts/tree/master/invoice_creation",children:"here"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Retrieve your Company ID!",type:"tip",children:(0,s.jsxs)(n.p,{children:["In this example, we'll suppose you have to manage just one Company, so we simply inserted its ID directly in the code. If instead, you need to be able to manage multiple companies, you'll need to retrieve the ID of the current company in some way.\nCheck the ",(0,s.jsx)(n.a,{href:"/basics/company-scoped-methods.mdx",children:"Company-scoped Methods"})," page for more info."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"Are you using Zapier?",type:"warning",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/docs/quickstarts/zapier-quickstart.md",children:"Zapier Actions"})," provide all the fields offered by the APIs, but it does not mean you need to compile all of them!\nFor example, while creating a new Issued Document the Document ID must be left blank!"]}),(0,s.jsx)(n.p,{children:"To follow this guide, you will be required to search the fields used in our example on the Zapier page and insert the related values."}),(0,s.jsxs)(n.p,{children:['The code of the fields will follow the JSON structure: for example, the "type" field is included in the "data" object, so the Zapier code will be "data.type". You can use the ',(0,s.jsx)(n.em,{children:"CRTL + F"})," command to search the field's code faster ","\ud83d\ude09"]}),(0,s.jsx)(n.p,{children:"In this example, we'll insert the values directly, but please remember that Zapier was built to let you select the workflow's previous steps' outputs as input in the Action, for example selecting the values returned by a trigger!"})]}),"\n",(0,s.jsx)(n.admonition,{title:"I already have an e-invoice XML, can't I just send it to the SDI?",type:"danger",children:(0,s.jsxs)(n.p,{children:["Unfortunately, no. TSE in Cloud lets you send documents to the SDI only if they were created through the TSE in Cloud functionalities, so if you have an XML you can't just send it to the SDI using our APIs.\nPlease, check ",(0,s.jsx)(n.a,{href:"/guides/externally-generated-xml.md",children:"this guide"})," for a more detailed explanation."]})}),"\n",(0,s.jsxs)(n.h2,{id:"information_source-pre-create-info",children:["\u2139\ufe0f","\xa0 Pre-Create Info"]}),"\n",(0,s.jsxs)(n.p,{children:["First of all, check out our ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/issued_documents/info",children:"Get Issued Document Pre-Create Info"})," page, it contains most of the information you will need to create a new invoice."]}),"\n",(0,s.jsxs)(n.h2,{id:"zero-step-zero-the-document-type",children:["0\ufe0f\u20e3","\xa0 Step Zero: The Document Type"]}),"\n",(0,s.jsxs)(n.p,{children:["In this guide, we will explain how to create an ",(0,s.jsx)(n.strong,{children:"invoice"}),". We choose this type of document because it is the most common, but keep in mind that the process is almost the same for every issued document."]}),"\n",(0,s.jsx)(n.p,{children:"The available types are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"invoice"}),": an invoice (we will use this type in this guide)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"quote"}),": a quote"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"proforma"}),": a pro forma invoice"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"receipt"}),": a tax receipt"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"delivery_note"}),": a delivery note"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"credit_note"}),": a credit note"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"order"}),": an order"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"work_report"}),": a work report"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"supplier_order"}),": an order by the supplier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"self_own_invoice"}),": a self-invoice in which the issuer of the document appears both as the customer and as the supplier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"self_supplier_invoice"}),": a self-invoice in which the issuer of the document appears as the customer, while the other company acts as the supplier"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"one-step-one-the-customer",children:["1\ufe0f\u20e3","\xa0 Step One: The Customer"]}),"\n",(0,s.jsx)(n.p,{children:"To create an invoice, we need the customer's details. You have three options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If the customer's details were already inserted in TSE in Cloud, you can retrieve it using our API and add it to the request. See also: ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/entities/clients",children:"Get the list of existing clients"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If the client wasn't inserted in TSE in Cloud, but it will likely be a recurring customer (so you would like to store his details), you can insert it now, and use the returned details to populate the request. See also: ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/entities/clients",children:"Create a new client"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If the customer is most likely a one-time customer, you can just insert his details directly in the invoice."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The Client's data must be inserted in the ",(0,s.jsx)(n.strong,{children:"entity"})," field, as shown below. If you used the Clients API to store/retrieve the details, please remember to insert the ",(0,s.jsx)(n.strong,{children:"entity.id"})," field to link the invoice accordingly."]}),"\n",(0,s.jsx)(n.admonition,{title:"We don't autocomplete!",type:"warning",children:(0,s.jsxs)(n.p,{children:["If you choose to link an existing customer (or to create a new one) make sure you ",(0,s.jsx)(n.strong,{children:"set all the fields you want to be shown in your invoice"}),": at this moment we don't autocomplete your invoice with the customer details, even if he's already stored in TSE in Cloud. You can get the info about your client performing a ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/entities/clients/-client_id-",children:"Get Client request"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"The partial request looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1, // only if the client already exists\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our C# SDK https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/ClientsApi.md#listclients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/ClientsApi.md#createclient\n// Insertion on-the-fly:\nEntity entity = new Entity(\n    id: 1, // Only if the client already exists\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/ClientsApi.md#listclients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/ClientsApi.md#CreateClient\n// Insertion on-the-fly:\nentity := *enterprisecloud.NewEntity().\n    SetId(1). // Only if the client already exists\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\n// Now we create the invoice and link the entity\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE)\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/ClientsApi.md#listlients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/ClientsApi.md#createclient\n// Insertion on-the-fly:\nEntity entity = new Entity()\n        .id(1) // Only if the client already exists\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity);\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/ClientsApi.md#listclients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/ClientsApi.md#createclient\n// Insertion on-the-fly:\n$entity = new Entity;\n$entity\n    ->setId(1) // Only if the client already exists\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n//now we instanciate the invoice and link the entity\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/ClientsApi.md#listClients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/ClientsApi.md#createClient\n// Insertion on-the-fly:\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1; // Only if the client already exists\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\n//now we instanciate the invoice and link the entity\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\n# If you want to use our Client API:\n# Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/ClientsApi.md#list_clients\n# Create a new client: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/ClientsApi.md#create_client\n# Insertion on-the-fly:\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\n# If you want to use our Client API:\n# Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/ClientsApi.md#list_clients\n# Create a new client: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/ClientsApi.md#create_client\n# Insertion on-the-fly:\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia"\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\n\n// If you want to use our Client API:\n// Retrieve a client: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/ClientsApi.md#listClients\n// Create a new client: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/ClientsApi.md#createClient\n// Insertion on-the-fly:\nlet entity: Entity = {};\nentity.id = 1; // Only if the client already exists\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\n//now we create the invoice and link the entity\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsxs)(n.p,{children:["In Zapier, first, you need to select your Company ID. Luckily, our Actions let you select it from a simple dropdown menu.\n",(0,s.jsx)(n.img,{alt:"Zapier - Company ID Selection",src:t(52947).A+""})]}),(0,s.jsx)(n.p,{children:"Next, you must set the Document Type we described in the previous step, you just need to select the correct value in the available list."}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zapier - Document Type",src:t(59976).A+""})}),(0,s.jsx)(n.p,{children:'Then you must set up the entity as explained above. The entity fields\' codes start with the "data.entity" prefix.'}),(0,s.jsxs)(n.p,{children:["Remember: in this example, you must insert values only in the fields we are suggesting to you!\nIn the image below we can't show all the fields you must fill, so you must search them all as shown before.\n",(0,s.jsx)(n.img,{alt:"Zapier - Entity",src:t(45796).A+""}),"\nHere you can find the list of all the fields and values you must fill for this example:"]}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity id"}),(0,s.jsx)(n.td,{children:"data.entity.id"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"It must be the ID of an existing Client, or blank."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity name"}),(0,s.jsx)(n.td,{children:"data.entity.name"}),(0,s.jsx)(n.td,{children:"Mario Rossi"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity vat number"}),(0,s.jsx)(n.td,{children:"data.entity.vat_number"}),(0,s.jsx)(n.td,{children:"47803200154"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity tax code"}),(0,s.jsx)(n.td,{children:"data.entity.tax_code"}),(0,s.jsx)(n.td,{children:"RSSMRA91M20B967Q"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity address street"}),(0,s.jsx)(n.td,{children:"data.entity.address_street"}),(0,s.jsx)(n.td,{children:"Via Italia, 66"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity address postal code"}),(0,s.jsx)(n.td,{children:"data.entity.address_postal_code"}),(0,s.jsx)(n.td,{children:"20900"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity address city"}),(0,s.jsx)(n.td,{children:"data.entity.address_city"}),(0,s.jsx)(n.td,{children:"Milano"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity address province"}),(0,s.jsx)(n.td,{children:"data.entity.address_province"}),(0,s.jsx)(n.td,{children:"MI"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity country"}),(0,s.jsx)(n.td,{children:"data.entity.country"}),(0,s.jsx)(n.td,{children:"Italia"}),(0,s.jsx)(n.td,{})]})]})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"two-step-two-the-invoice-data",children:["2\ufe0f\u20e3","\xa0 Step Two: The Invoice Data"]}),"\n",(0,s.jsx)(n.p,{children:"This section allows the insertion of your invoice's basic data, below you can find the main fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"date"}),": the date of issue."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"number"}),": the progressive invoice number, if omitted it gets automatically set (",(0,s.jsx)(n.em,{children:"'numero documento'"}),", eg. ",(0,s.jsx)(n.em,{children:"107"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"numeration"}),": optional invoice numeration (",(0,s.jsx)(n.em,{children:"'sezionale documento'"}),", eg. ",(0,s.jsx)(n.em,{children:'"/FPA"'}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"visible_subject"}),": short optional invoice description (visible in the invoice PDF)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"subject"}),": short optional invoice description (not visible in the invoice PDF)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"language"}),": the document language, see: ",(0,s.jsx)(n.a,{href:"/api-reference#get-/info/languages",children:"List Languages"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"currency"}),": the currency used for the invoice payment, see: ",(0,s.jsx)(n.a,{href:"/api-reference#get-/info/currencies",children:"List Currencies"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rc_center"}),": optional field that represents the category of the generated revenue (centro di ricavo)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The partial request looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1,\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    },\n    "date": "2022-01-20",\n    "number": 1,\n    "numeration": "/fatt",\n    "subject": "internal subject",\n    "visible_subject": "visible subject",\n    "currency": {\n      "id": "EUR",\n      "exchange_rate": "1.00000",\n      "symbol": "\u20ac"\n    },\n    "language": {\n      "code": "it",\n      "name": "Italiano"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our C# SDK\n// https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\nEntity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n\n    // Below you can find this section fields:\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    // Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listCurrencies\n    currency: new Currency(\n        id: "EUR"\n    ),\n    // Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listLanguages\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    // Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/InfoApi.md#listcurrencies\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    // Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/InfoApi.md#ListLanguages\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano"))\n\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        // Below you can find this section fields:\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        // Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/InfoApi.md#listCurrencies\n        .currency(new Currency().id("EUR"))\n        // Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listLanguages\n        .language(new Language()\n                        .code("it")\n                        .name("italiano")\n        );\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n\n// Below you can find this section fields:\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n// Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listcurrencies\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n// Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listLanguages\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\n// Below you can find this section fields:\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\n// Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listcurrencies\ninvoice.currency = {\n  id: "EUR",\n};\n// Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/InfoApi.md#listLanguages\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    # Below you can find this section fields:\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    # Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/InfoApi.md#list_currencies\n    currency = Currency(\n        id="EUR"\n    ),\n    # Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/InfoApi.md#list_languages\n    language = Language(\n        code="it",\n        name="italiano"\n    )\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  # Below you can find this section fields:\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  # Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/InfoApi.md#list_currencies\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  # Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/InfoApi.md#list_languages\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  )\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  // Retrieve the currencies: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listCurrencies\n  currency: {\n    id: "EUR",\n  },\n  // Retrieve the languages: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listLanguages\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Issued document date"}),(0,s.jsx)(n.td,{children:"data.date"}),(0,s.jsx)(n.td,{children:"2022-01-20"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity name"}),(0,s.jsx)(n.td,{children:"data.number"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity vat number"}),(0,s.jsx)(n.td,{children:"data.numeration"}),(0,s.jsx)(n.td,{children:"/fatt"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity tax code"}),(0,s.jsx)(n.td,{children:"data.subject"}),(0,s.jsx)(n.td,{children:"internal subject"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Entity address street"}),(0,s.jsx)(n.td,{children:"data.visible_subject"}),(0,s.jsx)(n.td,{children:"visible subject"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Currency code"}),(0,s.jsx)(n.td,{children:"data.currency.id"}),(0,s.jsx)(n.td,{children:"EUR"}),(0,s.jsx)(n.td,{children:"Check List Currencies"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Currency exchange rate"}),(0,s.jsx)(n.td,{children:"data.currency.exchange_rate"}),(0,s.jsx)(n.td,{children:"1.00000"}),(0,s.jsx)(n.td,{children:"Check List Currencies"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Currency symbol"}),(0,s.jsx)(n.td,{children:"data.currency.symbol"}),(0,s.jsx)(n.td,{children:"\u20ac"}),(0,s.jsx)(n.td,{children:"Check List Currencies"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Language code"}),(0,s.jsx)(n.td,{children:"data.language.code"}),(0,s.jsx)(n.td,{children:"it"}),(0,s.jsx)(n.td,{children:"Check List Languages"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Language extended name"}),(0,s.jsx)(n.td,{children:"data.language.name"}),(0,s.jsx)(n.td,{children:"Italiano"}),(0,s.jsx)(n.td,{children:"Check List Languages"})]})]})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"three-step-three-e-invoice",children:["3\ufe0f\u20e3","\xa0 Step Three: E-Invoice"]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to issue an electronic invoice the first thing to do is to set the ",(0,s.jsx)(n.strong,{children:"e_invoice"})," field to ",(0,s.jsx)(n.strong,{children:"true"}),", then the ",(0,s.jsx)(n.strong,{children:"ei_data"})," field needs to be set accordingly to your needs:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"vat_kind"}),": (esigibilit\xe0 iva) can be one of the following:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"I => immediata"}),"\n",(0,s.jsx)(n.li,{children:"D => differita"}),"\n",(0,s.jsx)(n.li,{children:"S => spit payment"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"payment_method"}),": one of the accepted ",(0,s.jsx)(n.a,{href:"https://www.fatturapa.gov.it/export/documenti/fatturapa/v1.3/Rappresentazione-tabellare-fattura-ordinaria.pdf",children:"payment methods"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bank_iban"}),": automatically to your settings default payment method if it is set\nbank_name: optional bank name\nbank"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"bank_beneficiary"}),": set your name if different from your business name"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"original_document_type"}),": optional field for invoice issue reason, can be ordine, contratto, convenzione"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"od_number"}),": reference to the original document"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"od_date"}),": original document issue date"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cig"}),": codice identificativo della gara"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cup"}),": codice unico di progetto"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"invoice_number"}),": if document type is credit note this field is the reference to the invoice to be reversed"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"invoice_date"}),": if document type is credit note this field is the date of the invoice to be reversed"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["There are also some fields to be set in the ",(0,s.jsx)(n.strong,{children:"entity"})," field:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"e_invoice"}),": must be set to true"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ei_code"}),": customer einvoice code"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"certified_email"}),": optional customer pec"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you have to set advanced parameters you have to use the ",(0,s.jsx)(n.a,{href:"/guides/e-invoice-xml-customisation.mdx",children:"ei_raw fields"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The partial request looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1,\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    },\n    "date": "2022-01-20",\n    "number": 1,\n    "numeration": "/fatt",\n    "subject": "internal subject",\n    "visible_subject": "visible subject",\n    "currency": {\n      "id": "EUR",\n      "exchange_rate": "1.00000",\n      "symbol": "\u20ac"\n    },\n    "language": {\n      "code": "it",\n      "name": "Italiano"\n    },\n    // Here we set e_invoice and ei_data\n    "e_invoice": true,\n    "ei_data": {\n      "payment_method": "MP05"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our C# SDK\n// https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\nEntity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    currency: new Currency(\n        id: "EUR"\n    ),\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    ),\n    // Here we set e_invoice and ei_data\n    eInvoice: true,\n    eiData: new IssuedDocumentEiData(\n        paymentMethod:"MP05"\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n    // Here we set e_invoice and ei_data\n    SetEInvoice(true).\n    SetEiData(*enterprisecloud.NewIssuedDocumentEiData().SetPaymentMethod("MP05"))\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        .currency(new Currency().id("EUR"))\n        .language(new Language()\n                        .code("it")\n                        .name("italiano"))\n        // Here we set e_invoice and ei_data\n        .eInvoice(true)\n        .eiData(\n            new IssuedDocumentEiData()\n                .paymentMethod("MP05")\n        );\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n// Here we set e_invoice and ei_data\n$invoice->setEInvoice(true);\n$invoice->setEiData(\n    new IssuedDocumentEiData(\n        array(\n            "payment_method" => "MP05"\n        )\n    )\n);\n\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity()\nentity.id = 1\nentity.name = "Mario Rossi"\nentity.vat_number = "47803200154"\nentity.tax_code = "RSSMRA91M20B967Q"\nentity.address_street = "Via Italia, 66"\nentity.address_postal_code = "20900"\nentity.address_city = "Milano"\nentity.address_province = "MI"\nentity.country = "Italia"\n\nlet invoice = new enterprisecloudSdk.IssuedDocument()\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice\ninvoice.entity = entity\ninvoice.date = "2022-01-20"\ninvoice.number = 1\ninvoice.numeration = "/fatt"\ninvoice.subject = "internal subject"\ninvoice.visible_subject = "visible subject"\ninvoice.currency = {\n    id: "EUR"\n}\ninvoice.language = {\n    code: "it",\n    name: "Italiano"\n}\n// Here we set e_invoice and ei_data\ninvoice.e_invoice = true\ninvoice.ei_data = {\n    payment_method = "MP05"\n}\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    # Here we set e_invoice and ei_data\n    e_invoice = True,\n    ei_data = IssuedDocumentEiData(\n        payment_method="MP05"\n    )\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia"\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  # Here we set e_invoice and ei_data\n  e_invoice: true,\n  ei_data: enterprisecloud_Ruby_Sdk::IssuedDocumentEiData.new(\n    payment_method: "MP05"\n  )\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\n\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  // Here we set e_invoice and ei_data\n  e_invoice: true,\n  ei_data: {\n    payment_method: "MP05",\n  },\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Issued document is an e-invoice"}),(0,s.jsx)(n.td,{children:"data.e_invoice"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"E-invoice payment methid"}),(0,s.jsx)(n.td,{children:"data.ei_data.payment_method"}),(0,s.jsx)(n.td,{children:"MP05"}),(0,s.jsxs)(n.td,{children:["see ",(0,s.jsx)(n.a,{href:"https://www.fatturapa.gov.it/export/documenti/fatturapa/v1.2.2/Rappresentazione_Tabellare_FattOrdinaria_V1.2.2.pdf",children:"here"})," for the accepted values of ModalitaPagamento"]})]})]})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"four-step-four-contributions-and-withholdings",children:["4\ufe0f\u20e3","\xa0 Step Four: Contributions and Withholdings"]}),"\n",(0,s.jsx)(n.p,{children:"The Contributions and withholdings section allows the insertion of Casse Professionali, Rivalsa, Withholding tax, and other Withholdings / Enasarco."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cassa professionisti"}),": you can set up two Casse professionisti and set the fields according to your needs."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"rivalsa (INPS)"}),": you can set up the Rivalsa and charge it to your clients setting the appropriate fields."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"withholding tax"}),": you can set up the Irpef withholding tax setting the appropriate fields."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"enasarco"})," and ",(0,s.jsx)(n.strong,{children:"other withholdings"}),": you will find also the fields to set up Enasarco and other Withholdings."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"five-step-five-items-list",children:["5\ufe0f\u20e3","\xa0 Step Five: Items list"]}),"\n",(0,s.jsxs)(n.p,{children:["The items composing the invoice are included in the ",(0,s.jsx)(n.em,{children:"Items List"})," section."]}),"\n",(0,s.jsx)(n.p,{children:"As already seen in step one, you have three possibilities to add items:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If you already inserted the Product in the TSE in Cloud API, you can retrieve it using the Products API. See also: ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/products",children:"Get a list of the products"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If this is a new product, and you want to add it to TSE in Cloud, you can do it now. See also: ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/products",children:"Create a new product"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If you don't want to save this product for future use, just insert it in the request."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"items_list"})," is an array of items: Just remember to specify the id if you inserted a product using the Product API and want to link it to the invoice."]}),"\n",(0,s.jsx)(n.p,{children:"If you are not familiar with the invoice item, you can find below the description of the fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"code"}),": optional, a custom code"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"name"}),": product name"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"net_price"}),"/",(0,s.jsx)(n.strong,{children:"gross_price"}),": price per single item, if you set the flag use_gross_prices to true you have to specify the gross_price"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"vat"}),": the only field you have to set is the id, you can get the id of the vat you need by performing a ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/info/vat_types",children:"list vat type"})," call or ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/settings/vat_types",children:"create a vat type"})," if the one you want does not exist yet."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"discount"}),": optional, discount percentage, automatically set if you specified the default discount in the relative client registry"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"category"}),": useful to categorize your products"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"description"}),": additional details"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"qty"}),": number of products sold"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"measure"}),": optional, unit of measure of the product (eg: kilograms, liters, days, etc...)"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"not_taxable"}),": if this flag is set to true the amount will not be counted as revenue."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"apply_withholding_tax"}),": if you don't want withholding taxes, rivalsa, and cassa to be applied set this flag to false."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to add a 'bollo a carico del cliente' in a einvoice, you have to add a new item, set the ",(0,s.jsx)(n.em,{children:"name"})," to 'Bollo in fattura', ",(0,s.jsx)(n.em,{children:"net_price"})," to 2\u20ac, ",(0,s.jsx)(n.em,{children:"not_taxable"})," to true and the ",(0,s.jsx)(n.em,{children:"vat.id"})," field to 21 (0% Escluso Art.15), if the invoice is not electronic it's enough to set the field ",(0,s.jsx)(n.em,{children:"stamp_duty"})," to the amount you want to charge, keep in mind that using the ",(0,s.jsx)(n.em,{children:"stamp_duty"})," in a einvoice the 'bollo' will be charged to you, not to the customer."]}),"\n",(0,s.jsx)(n.admonition,{title:"We don't autocomplete!",type:"warning",children:(0,s.jsxs)(n.p,{children:["If you choose to link an existing product (or to create a new one) make sure you ",(0,s.jsx)(n.strong,{children:"set all the fields you want to be shown in your invoice"}),": at this moment we don't autocomplete your invoice with the product details, even if it is already stored in TSE in Cloud. You can get the info about your product performing a ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/products/-product_id-",children:"Get Product request"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"Now we add the items_list to our request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n\n{\n    "data": {\n        "type": "invoice",\n        "entity": {\n            "id": 1,\n            "name": "Mario Rossi",\n            "vat_number": "47803200154",\n            "tax_code": "RSSMRA91M20B967Q",\n            "address_street": "Via Italia, 66",\n            "address_postal_code": "20900",\n            "address_city": "Milano",\n            "address_province": "MI",\n            "address_extra": "",\n            "country": "Italia"\n        },\n        "date": "2022-01-20",\n        "number": 1,\n        "numeration": "/fatt",\n        "subject": "internal subject",\n        "visible_subject": "visible subject",\n        "currency": {\n            "id": "EUR",\n            "exchange_rate": "1.00000",\n            "symbol": "\u20ac"\n        },\n        "language": {\n            "code": "it",\n            "name": "Italiano"\n        },\n        "items_list": [\n            {\n                "product_id": 4,\n                "code": "TV3",\n                "name": "Tavolo in legno",\n                "net_price": 100,\n                "category": "cucina",\n                "discount": 0,\n                "qty": 1,\n                "vat": {\n                    "id": 0 #22%\n                }\n            }\n        ]\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our C# SDK\n// https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\nEntity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    currency: new Currency(\n        id: "EUR"\n    ),\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    ),\n    // Here we set the Items List\n    // List your products: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/ProductsApi.md#listProducts\n    itemsList: new List < IssuedDocumentItemsListItem > {\n        new IssuedDocumentItemsListItem(\n            productId: 4,\n            code: "TV3",\n            name: "Tavolo in legno",\n            netPrice: 100,\n            category: "cucina",\n            discount: 0,\n            qty: 1,\n            vat: new VatType(\n                id: 0\n            )\n        )\n    }\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n    // Here we set the Items List\n    // List your products: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/ProductsApi.md#listProducts\n    SetItemsList([]enterprisecloud.IssuedDocumentItemsListItem{\n        *enterprisecloud.NewIssuedDocumentItemsListItem().\n            SetProductId(4).\n            SetCode("TV3").\n            SetName("Tavolo in legno").\n            SetNetPrice(100).\n            SetCategory("cucina").\n            SetDiscount(0).\n            SetQty(1).\n            SetVat(*enterprisecloud.NewVatType().SetId(0)),\n    })\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        .currency(new Currency().id("EUR"))\n        .language(new Language()\n                        .code("it")\n                        .name("italiano")\n        )\n        // Here we set the Items List\n        // List your products: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/ProductsApi.md#listProducts\n        .addItemsListItem(\n                new IssuedDocumentItemsListItem()\n                        .productId(4)\n                        .code("TV3")\n                        .name("Tavolo in legno")\n                        .netPrice(BigDecimal.valueOf(100))\n                        .category("cucina")\n                        .discount(BigDecimal.valueOf(0))\n                        .qty(BigDecimal.valueOf(1))\n                        .vat(new VatType().id(0))\n        );\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n// Here we set the Items List\n// List your products: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/ProductsApi.md#listproducts\n$invoice->setItemsList(\n    array(\n        new IssuedDocumentItemsListItem(\n            array(\n                "product_id" => 4,\n                "code" => "TV3",\n                "name" => "Tavolo in legno",\n                "net_price" => 100,\n                "category" => "cucina",\n                "discount" => 0,\n                "qty" => 1,\n                "vat" => new VatType(\n                    array(\n                        "id" => 0\n                    )\n                )\n            )\n        )\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\ninvoice.currency = {\n  id: "EUR",\n};\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\n// Here we set the Items List\n// List your products: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/ProductsApi.md#listProducts\ninvoice.items_list = [\n  {\n    product_id: 4,\n    code: "tv3",\n    name: "tavolo in legno",\n    net_price: 100,\n    category: "cucina",\n    discount: 0,\n    qty: 1,\n    vat: {\n      id: 0,\n    },\n  },\n];\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    # Here we set the Items List\n    # List your products: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/ProductsApi.md#list_products\n    items_list = [\n        IssuedDocumentItemsListItem(\n            product_id=4,\n            code="TV3",\n            name="Tavolo in legno",\n            net_price=100.0,\n            category="cucina",\n            discount=0.0,\n            qty=1.0,\n            vat=VatType(\n                id=0\n            )\n        )\n    ]\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  # Here we set the Items List\n  # List your products: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/ProductsApi.md#list_products\n  items_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentItemsListItem.new(\n          product_id: 4,\n          code: "TV3",\n          name: "Tavolo in legno",\n          net_price: 100,\n          category: "cucina",\n          discount: 0,\n          qty: 1,\n          vat: enterprisecloud_Ruby_Sdk::VatType.new(\n              id: 0\n          )\n      )\n  )\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  // Here we set the Items List\n  // List your products: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/ProductsApi.md#listProducts\n  items_list: [\n    {\n      product_id: 4,\n      code: "TV3",\n      name: "Tavolo in legno",\n      net_price: 100,\n      category: "cucina",\n      discount: 0,\n      qty: 1,\n      vat: {\n        id: 0,\n      },\n    },\n  ],\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"The Items List in fact accepts an array of items."}),(0,s.jsxs)(n.p,{children:["In this example, we'll insert only a single item, but you can check how to insert multiple items in the ",(0,s.jsx)(n.a,{href:"https://zapier.com/blog/formatter-line-item-automation/",children:"Zapier Documentation"}),"."]}),(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product id"}),(0,s.jsx)(n.td,{children:"data.items_list.product_id"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"Check List Products"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product code"}),(0,s.jsx)(n.td,{children:"data.items_list.code"}),(0,s.jsx)(n.td,{children:"TV3"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product name"}),(0,s.jsx)(n.td,{children:"data.items_list.name"}),(0,s.jsx)(n.td,{children:"Tavolo in legno"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product net price"}),(0,s.jsx)(n.td,{children:"data.items_list.net_price"}),(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product category"}),(0,s.jsx)(n.td,{children:"data.items_list.category"}),(0,s.jsx)(n.td,{children:"cucina"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product description"}),(0,s.jsx)(n.td,{children:"data.items_list.discount"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Issued document item product qty"}),(0,s.jsx)(n.td,{children:"data.items_list.qty"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.items list - Vat type id"}),(0,s.jsx)(n.td,{children:"data.items_list.vat.id"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"Check List VAT Type"})]})]})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"six-step-six-payments-list",children:["6\ufe0f\u20e3","\xa0 Step Six: Payments List"]}),"\n",(0,s.jsx)(n.p,{children:"The Payment List section allows the insertion of all the info about your invoice payments."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"amount"}),": the amount of the payment."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"payment_terms"}),": the number of days by which the payment must be made can be set."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"due_date"}),": the date by which the payment must be made."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"status"}),": the payment status, can be not_paid, paid, and reversed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"payment_account"}),": if the status of the invoice is paid, the payment account id needs to be set, make sure it exists or you will get an error. You can ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/info/payment_accounts",children:"get a list of your payment accounts"})," or ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/settings/payment_accounts",children:"create a new one"})," as you need."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Here we suppose that the status is "paid", and we add the new parameters to the request:'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1,\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    },\n    "date": "2022-01-20",\n    "number": 1,\n    "numeration": "/fatt",\n    "subject": "internal subject",\n    "visible_subject": "visible subject",\n    "currency": {\n      "id": "EUR",\n      "exchange_rate": "1.00000",\n      "symbol": "\u20ac"\n    },\n    "language": {\n      "code": "it",\n      "name": "Italiano"\n    },\n    "items_list": [\n      {\n        "product_id": 4,\n        "code": "TV3",\n        "name": "Tavolo in legno",\n        "net_price": 100,\n        "category": "cucina",\n        "discount": 0,\n        "qty": 1,\n        "vat": {\n          "id": 0\n        }\n      }\n    ],\n    "payments_list": [\n      {\n        "amount": 122,\n        "due_date": "2022-01-23",\n        "paid_date": "2022-01-22",\n        "status": "paid",\n        "payment_account": {\n          "id": 110\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our C# SDK\n// https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\nEntity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    currency: new Currency(\n        id: "EUR"\n    ),\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    ),\n    itemsList: new List < IssuedDocumentItemsListItem > {\n        new IssuedDocumentItemsListItem(\n            productId: 4,\n            code: "TV3",\n            name: "Tavolo in legno",\n            netPrice: 100,\n            category: "cucina",\n            discount: 0,\n            qty: 1,\n            vat: new VatType(\n                id: 0\n            )\n        )\n    },\n    // Here we set the payments list assuming our invoice has already been paid\n    paymentsList: new List < IssuedDocumentPaymentsListItem > {\n        new IssuedDocumentPaymentsListItem(\n            amount: 122,\n            dueDate: new DateTime(2022, 01, 23),\n            paidDate: new DateTime(2022, 01, 22),\n            status: IssuedDocumentStatus.Paid,\n            // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listPaymentAccounts\n            paymentAccount: new PaymentAccount(\n                id: 110\n            )\n        )\n    }\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n    SetItemsList([]enterprisecloud.IssuedDocumentItemsListItem{\n        *enterprisecloud.NewIssuedDocumentItemsListItem().\n            SetProductId(4).\n            SetCode("TV3").\n            SetName("Tavolo in legno").\n            SetNetPrice(100).\n            SetCategory("cucina").\n            SetDiscount(0).\n            SetQty(1).\n            SetVat(*enterprisecloud.NewVatType().SetId(0)),\n    }).\n    // Here we set the Payments List\n    // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listPaymentAccounts\n    SetPaymentsList([]enterprisecloud.IssuedDocumentPaymentsListItem{\n        *enterprisecloud.NewIssuedDocumentPaymentsListItem().\n            SetAmount(122).\n            SetDueDate("2022-01-23").\n            SetPaidDate("2022-01-22").\n            SetStatus(enterprisecloud.IssuedDocumentStatuses.NOT_PAID).\n            SetPaymentAccount(*enterprisecloud.NewPaymentAccount().SetId(110)),\n    })\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        .currency(new Currency().id("EUR"))\n        .language(new Language()\n                        .code("it")\n                        .name("italiano")\n        )\n        .addItemsListItem(\n                new IssuedDocumentItemsListItem()\n                        .productId(4)\n                        .code("TV3")\n                        .name("Tavolo in legno")\n                        .netPrice(BigDecimal.valueOf(100))\n                        .category("cucina")\n                        .discount(BigDecimal.valueOf(0))\n                        .qty(BigDecimal.valueOf(1))\n                        .vat(new VatType().id(0))\n        )\n        // Here we set the payments list assuming our invoice has already been paid\n        .addPaymentsListItem(\n                new IssuedDocumentPaymentsListItem()\n                        .amount(BigDecimal.valueOf(122))\n                        .dueDate(LocalDate.of(2022, 01, 23))\n                        .paidDate(LocalDate.of(2022, 01, 22))\n                        .status(IssuedDocumentStatus.PAID)\n                        // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/InfoApi.md#listPaymentAccounts\n                        .paymentAccount(new PaymentAccount().id(110))\n        );\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n$invoice->setItemsList(\n    array(\n        new IssuedDocumentItemsListItem(\n            array(\n                "product_id" => 4,\n                "code" => "TV3",\n                "name" => "Tavolo in legno",\n                "net_price" => 100,\n                "category" => "cucina",\n                "discount" => 0,\n                "qty" => 1,\n                "vat" => new VatType(\n                    array(\n                        "id" => 0\n                    )\n                )\n            )\n        )\n    )\n);\n// Here we set the payments list assuming our invoice has already been paid\n$invoice->setPaymentsList(\n    array(\n        new IssuedDocumentPaymentsListItem(\n            array(\n                "amount" => 122,\n                "due_date" => new DateTime("2022-01-23"),\n                "paid_date" => new DateTime("2022-01-22"),\n                "status" => IssuedDocumentStatus::PAID,\n                // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listpaymentaccounts\n                "payment_account" => new PaymentAccount(\n                    array(\n                        "id" => 110\n                    )\n                )\n            )\n        )\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\ninvoice.currency = {\n  id: "EUR",\n};\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\ninvoice.items_list = [\n  {\n    product_id: 4,\n    code: "tv3",\n    name: "tavolo in legno",\n    net_price: 100,\n    category: "cucina",\n    discount: 0,\n    qty: 1,\n    vat: {\n      id: 0,\n    },\n  },\n];\n// Here we set the payments list assuming our invoice has already been paid\ninvoice.payments_list = [\n  {\n    amount: 122,\n    due_date: "2022-01-23",\n    paid_date: "2022-01-22",\n    status: "paid",\n    // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/InfoApi.md#listPaymentAccounts\n    payment_account: {\n      id: 10,\n    },\n  },\n];\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    items_list = [\n        IssuedDocumentItemsListItem(\n            product_id=4,\n            code="TV3",\n            name="Tavolo in legno",\n            net_price=100.0,\n            category="cucina",\n            discount=0.0,\n            qty=1.0,\n            vat=VatType(\n                id=0\n            )\n        )\n    ],\n    # Here we set the payments list assuming our invoice has already been paid\n    payments_list = [\n        IssuedDocumentPaymentsListItem(\n            amount=122.0,\n            due_date=datetime.date(2022, 1, 23),\n            paid_date=datetime.date(2022, 1, 22),\n            status=IssuedDocumentStatus("paid"),\n            # List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/InfoApi.md#list_payment_accounts\n            payment_account=PaymentAccount(\n                id=110\n            )\n        )\n    ]\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  items_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentItemsListItem.new(\n          product_id: 4,\n          code: "TV3",\n          name: "Tavolo in legno",\n          net_price: 100,\n          category: "cucina",\n          discount: 0,\n          qty: 1,\n          vat: enterprisecloud_Ruby_Sdk::VatType.new(\n              id: 0\n          )\n      )\n  ),\n  # Here we set the payments list assuming our invoice has already been paid\n  payments_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentPaymentsListItem.new(\n          amount: 122,\n          due_date: Date.new(2022, 01, 23),\n          paid_date: Date.new(2022, 01, 22),\n          status: enterprisecloud_Ruby_Sdk::IssuedDocumentStatus::PAID,\n          # List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/InfoApi.md#list_payment_accounts\n          payment_account: enterprisecloud_Ruby_Sdk::PaymentAccount.new(\n              id: 110\n          )\n      )\n  )\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  items_list: [\n    {\n      product_id: 4,\n      code: "TV3",\n      name: "Tavolo in legno",\n      net_price: 100,\n      category: "cucina",\n      discount: 0,\n      qty: 1,\n      vat: {\n        id: 0,\n      },\n    },\n  ],\n  // Here we set the payments list assuming our invoice has already been paid\n  payments_list: [\n    {\n      amount: 122,\n      due_date: "2022-01-23",\n      paid_date: "2022-01-22",\n      status: "paid",\n      // List your payment accounts: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listPaymentAccounts\n      payment_account: {\n        id: 10,\n      },\n    },\n  ],\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"The Payments List in fact accepts an array of items."}),(0,s.jsxs)(n.p,{children:["In this example, we'll insert only a single item, but you can check how to insert multiple items in the ",(0,s.jsx)(n.a,{href:"https://zapier.com/blog/formatter-line-item-automation/",children:"Zapier Documentation"}),"."]}),(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.payments list - Issued document payment amount"}),(0,s.jsx)(n.td,{children:"data.payments_list.amount"}),(0,s.jsx)(n.td,{children:"122"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.payments list - Issued document payment due date"}),(0,s.jsx)(n.td,{children:"data.payments_list.due_date"}),(0,s.jsx)(n.td,{children:"2022-01-23"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.payments list - Issued document payment date"}),(0,s.jsx)(n.td,{children:"data.payments_list.paid_date"}),(0,s.jsx)(n.td,{children:"2022-01-22"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.payments list - Issued document status"}),(0,s.jsx)(n.td,{children:"data.payments_list.status"}),(0,s.jsx)(n.td,{children:"paid"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data.payments list - Payment account id"}),(0,s.jsx)(n.td,{children:"data.payments_list.payment_account.id"}),(0,s.jsx)(n.td,{children:"110"}),(0,s.jsx)(n.td,{children:"Check List Payment Accounts"})]})]})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to know more about the calculation of the amounts you can visit the ",(0,s.jsx)(n.a,{href:"/guides/invoice-totals.mdx",children:"calculating totals"})," page."]}),"\n",(0,s.jsxs)(n.h2,{id:"seven-step-seven-advanced-options",children:["7\ufe0f\u20e3","\xa0 Step Seven: Advanced Options"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"Advanced Options"})," section allows the management of the payment methods and the direct generation of DDT and accompanying invoices."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"payment_method"}),": you can use this field to communicate to the customer how to pay the invoice;\nthe only required parameter is the payment method id, make sure it exists or you will get an error. You can ",(0,s.jsx)(n.a,{href:"/api-reference#get-/c/-company_id-/info/payment_methods",children:"get a list of your payment methods"})," or ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/settings/payment_methods",children:"create a new one"})," according to your needs."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"show_payment_method"}),": if this flag is set to true, it shows the payment method details in the invoice."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"delivery_note"}),": if this flag is set to true, you can set all the delivery note-related parameters and a DDT will be automatically created."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"accompanying_invoice"}),": if this flag is set to true, you can set all the accompanying invoice-related parameters and it will be automatically created."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"amount_due_discount"}),": with this parameter you can set a discount or surcharge on the total of the invoice."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"use_split_payment"}),": this flag can be set to true if the split payment is needed."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Below we add the Payment Method to the request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a partial request, please wait before sending it\n\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1,\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    },\n    "date": "2022-01-20",\n    "number": 1,\n    "numeration": "/fatt",\n    "subject": "internal subject",\n    "visible_subject": "visible subject",\n    "currency": {\n      "id": "EUR",\n      "exchange_rate": "1.00000",\n      "symbol": "\u20ac"\n    },\n    "language": {\n      "code": "it",\n      "name": "Italiano"\n    },\n    "items_list": [\n      {\n        "product_id": 4,\n        "code": "TV3",\n        "name": "Tavolo in legno",\n        "net_price": 100,\n        "category": "cucina",\n        "discount": 0,\n        "qty": 1,\n        "vat": {\n          "id": 0\n        }\n      }\n    ],\n    "payments_list": [\n      {\n        "amount": 122,\n        "due_date": "2022-01-23",\n        "paid_date": "2022-01-22",\n        "status": "paid",\n        "payment_account": {\n          "id": 110\n        }\n      }\n    ],\n    "payment_method": {\n      "id": 386683\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'Entity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    currency: new Currency(\n        id: "EUR"\n    ),\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    ),\n    itemsList: new List < IssuedDocumentItemsListItem > {\n        new IssuedDocumentItemsListItem(\n            productId: 4,\n            code: "TV3",\n            name: "Tavolo in legno",\n            netPrice: 100,\n            category: "cucina",\n            discount: 0,\n            qty: 1,\n            vat: new VatType(\n                id: 0\n            )\n        )\n    },\n    paymentsList: new List < IssuedDocumentPaymentsListItem > {\n        new IssuedDocumentPaymentsListItem(\n            amount: 122,\n            dueDate: new DateTime(2022, 01, 23),\n            paidDate: new DateTime(2022, 01, 22),\n            status: IssuedDocumentStatus.Paid,\n            paymentAccount: new PaymentAccount(\n                id: 110\n            )\n        )\n    },\n    // Here we add the payment method\n    // List your payment methods: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listpaymentmethods\n    paymentMethod: new PaymentMethod(\n        id: 386683\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n    SetItemsList([]enterprisecloud.IssuedDocumentItemsListItem{\n        *enterprisecloud.NewIssuedDocumentItemsListItem().\n            SetProductId(4).\n            SetCode("TV3").\n            SetName("Tavolo in legno").\n            SetNetPrice(100).\n            SetCategory("cucina").\n            SetDiscount(0).\n            SetQty(1).\n            SetVat(*enterprisecloud.NewVatType().SetId(0)),\n    }).\n    SetPaymentsList([]enterprisecloud.IssuedDocumentPaymentsListItem{\n        *enterprisecloud.NewIssuedDocumentPaymentsListItem().\n            SetAmount(122).\n            SetDueDate("2022-01-23").\n            SetPaidDate("2022-01-22").\n            SetStatus(enterprisecloud.IssuedDocumentStatuses.NOT_PAID).\n            SetPaymentAccount(*enterprisecloud.NewPaymentAccount().SetId(110)),\n    }).\n    // Here we add the payment method\n    // List your payment methods: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/InfoApi.md#listpaymentmethods\n    SetPaymentMethod(*enterprisecloud.NewPaymentMethod().SetId(386683))\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a partial request, please wait before sending it\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        .currency(new Currency().id("EUR"))\n        .language(new Language()\n                        .code("it")\n                        .name("italiano")\n        )\n        .addItemsListItem(\n                new IssuedDocumentItemsListItem()\n                        .productId(4)\n                        .code("TV3")\n                        .name("Tavolo in legno")\n                        .netPrice(BigDecimal.valueOf(100))\n                        .category("cucina")\n                        .discount(BigDecimal.valueOf(0))\n                        .qty(BigDecimal.valueOf(1))\n                        .vat(new VatType().id(0))\n        )\n        .addPaymentsListItem(\n                new IssuedDocumentPaymentsListItem()\n                        .amount(BigDecimal.valueOf(122))\n                        .dueDate(LocalDate.of(2022, 01, 23))\n                        .paidDate(LocalDate.of(2022, 01, 22))\n                        .status(IssuedDocumentStatus.PAID)\n                        .paymentAccount(new PaymentAccount().id(110))\n        )\n        // Here we add the payment method\n        // List your payment methods: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/InfoApi.md#listpaymentmethods\n        .paymentMethod(\n                new PaymentMethod().id(386683)\n        );\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n$invoice->setItemsList(\n    array(\n        new IssuedDocumentItemsListItem(\n            array(\n                "product_id" => 4,\n                "code" => "TV3",\n                "name" => "Tavolo in legno",\n                "net_price" => 100,\n                "category" => "cucina",\n                "discount" => 0,\n                "qty" => 1,\n                "vat" => new VatType(\n                    array(\n                        "id" => 0\n                    )\n                )\n            )\n        )\n    )\n);\n$invoice->setPaymentsList(\n    array(\n        new IssuedDocumentPaymentsListItem(\n            array(\n                "amount" => 122,\n                "due_date" => new DateTime("2022-01-23"),\n                "paid_date" => new DateTime("2022-01-22"),\n                "status" => IssuedDocumentStatus::PAID,\n                "payment_account" => new PaymentAccount(\n                    array(\n                        "id" => 110\n                    )\n                )\n            )\n        )\n    )\n);\n// Here we add the payment method\n// List your payment methods: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listpaymentmethods\n$invoice->setPaymentMethod(\n    new PaymentMethod(\n        array(\n            "id" => 386683\n        )\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\ninvoice.currency = {\n  id: "EUR",\n};\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\ninvoice.items_list = [\n  {\n    product_id: 4,\n    code: "tv3",\n    name: "tavolo in legno",\n    net_price: 100,\n    category: "cucina",\n    discount: 0,\n    qty: 1,\n    vat: {\n      id: 0,\n    },\n  },\n];\ninvoice.payments_list = [\n  {\n    amount: 122,\n    due_date: "2022-01-23",\n    paid_date: "2022-01-22",\n    status: "paid",\n    payment_account: {\n      id: 10,\n    },\n  },\n];\n// Here we add the payment method\n// List your payment methods: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/InfoApi.md#listpaymentmethods\ninvoice.payment_method = {\n  id: 386683,\n};\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    items_list = [\n        IssuedDocumentItemsListItem(\n            product_id=4,\n            code="TV3",\n            name="Tavolo in legno",\n            net_price=100.0,\n            category="cucina",\n            discount=0.0,\n            qty=1.0,\n            vat=VatType(\n                id=0\n            )\n        )\n    ],\n    payments_list = [\n        IssuedDocumentPaymentsListItem(\n            amount=122.0,\n            due_date=datetime.date(2022, 1, 23),\n            paid_date=datetime.date(2022, 1, 22),\n            status=IssuedDocumentStatus("paid"),\n            payment_account=PaymentAccount(\n                id=110\n            )\n        )\n    ],\n    # Here we add the payment method\n    # List your payment methods: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/InfoApi.md#list_payment_methods\n    payment_method = PaymentMethod(\n        id=386683\n    )\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a partial request, please wait before sending it\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  items_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentItemsListItem.new(\n          product_id: 4,\n          code: "TV3",\n          name: "Tavolo in legno",\n          net_price: 100,\n          category: "cucina",\n          discount: 0,\n          qty: 1,\n          vat: enterprisecloud_Ruby_Sdk::VatType.new(\n              id: 0\n          )\n      )\n  ),\n  payments_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentPaymentsListItem.new(\n          amount: 122,\n          due_date: Date.new(2022, 01, 23),\n          paid_date: Date.new(2022, 01, 22),\n          status: enterprisecloud_Ruby_Sdk::IssuedDocumentStatus::PAID,\n          payment_account: enterprisecloud_Ruby_Sdk::PaymentAccount.new(\n              id: 110\n          )\n      )\n  ),\n  # Here we add the payment method\n  # List your payment methods: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/InfoApi.md#list_payment_methods\n  payment_method: enterprisecloud_Ruby_Sdk::PaymentMethod.new(\n      id: 386683\n  )\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  items_list: [\n    {\n      product_id: 4,\n      code: "TV3",\n      name: "Tavolo in legno",\n      net_price: 100,\n      category: "cucina",\n      discount: 0,\n      qty: 1,\n      vat: {\n        id: 0,\n      },\n    },\n  ],\n  payments_list: [\n    {\n      amount: 122,\n      due_date: "2022-01-23",\n      paid_date: "2022-01-22",\n      status: "paid",\n      payment_account: {\n        id: 10,\n      },\n    },\n  ],\n  // Here we add the payment method\n  // List your payment methods: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listpaymentmethods\n  payment_method: {\n    id: 386683,\n  },\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Payment method id"}),(0,s.jsx)(n.td,{children:"data.payment_method.id"}),(0,s.jsx)(n.td,{children:"386683"}),(0,s.jsx)(n.td,{children:"Check List Payment Method"})]})})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"eight-step-eight-attachment",children:["8\ufe0f\u20e3","\xa0 Step Eight: Attachment"]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to attach a file to your invoice you can do it by using ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/issued_documents/attachment",children:"Upload Attachment"})," method; the response will include an ",(0,s.jsx)(n.em,{children:"attachment_token"}),", that you can pass to the Invoice Creation request that we're building to effectively attach the file.\nThe token must be assigned to the ",(0,s.jsx)(n.em,{children:"attachment_token"})," parameter in the request."]}),"\n",(0,s.jsx)(n.p,{children:"The code to upload an attachment with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'Configuration config = new Configuration();\nconfig.AccessToken = "YOUR_ACCESS_TOKEN";\n\nvar apiInstance = new IssuedDocumentsApi(config);\n\nvar filename = "fattura_XX_XXXX";\nvar attachment = File.Open("/path/to/file.pdf", FileMode.Open);\nvar companyId = 12345;\n\nUploadIssuedDocumentAttachmentResponse result = apiInstance.UploadIssuedDocumentAttachment(companyId, filename, attachment);\nvar attachmentToken = result.Data.AttachmentToken;\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'companyId := int32(12345)\nfilename := "fattura_XX_XXXX"\nattachment, _ := os.Open("/path/to/file.pdf")\n\nauth := context.WithValue(context.Background(), enterprisecloudapi.ContextAccessToken, "YOUR_ACCESS_TOKEN")\nconfiguration := enterprisecloudapi.NewConfiguration()\napiClient := enterprisecloudapi.NewAPIClient(configuration)\nresp, r, err := apiClient.IssuedDocumentsAPI.UploadIssuedDocumentAttachment(auth, companyId).Filename(filename).Attachment(attachment).Execute()\nif err != nil {\n    fmt.Fprintf(os.Stderr, "Error when calling `IssuedDocumentsAPI.UploadIssuedDocumentAttachment``: %v\\n", err)\n    fmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n}\nattachmentToken := resp.Data.AttachmentToken\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'ApiClient defaultClient = Configuration.getDefaultApiClient();\ndefaultClient.setBasePath("https://api-v2.enterprisecloud.it");\n\nOAuth OAuth2AuthenticationCodeFlow = (OAuth) defaultClient.getAuthentication("OAuth2AuthenticationCodeFlow");\nOAuth2AuthenticationCodeFlow.setAccessToken("YOUR_ACCESS_TOKEN");\n\nIssuedDocumentsApi apiInstance = new IssuedDocumentsApi(defaultClient);\nInteger companyId = 12345;\nString filename = "fattura_XX_XXXX";\nFile attachment = new File("/path/to/file.pdf");\n\nUploadIssuedDocumentAttachmentResponse result = apiInstance.uploadIssuedDocumentAttachment(companyId, filename, attachment);\nString attachmentToken = result.getData().getAttachmentToken();\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'let defaultClient = enterprisecloudSdk.ApiClient.instance;\n\nlet OAuth2AuthenticationCodeFlow =\n  defaultClient.authentications["OAuth2AuthenticationCodeFlow"];\nOAuth2AuthenticationCodeFlow.accessToken = "YOUR_ATTACHMENT_TOKEN";\n\nlet apiInstance = new enterprisecloudSdk.IssuedDocumentsApi();\nlet companyId = 12345;\nlet opts = {\n  filename: "fattura_XX_XXXX",\n  attachment: fs.createReadStream("/path/to/file.pdf"),\n};\n\nlet res = await apiInstance.uploadIssuedDocumentAttachment(companyId, opts);\nlet attachmentTokent = res.data.attachment_token;\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"configuration = enterprisecloud_python_sdk.Configuration()\nconfiguration.access_token = \"YOUR_ACCESS_TOKEN\"\n\nwith enterprisecloud_python_sdk.ApiClient(configuration) as api_client:\n\n    api_instance = issued_documents_api.IssuedDocumentsApi(api_client)\n    company_id = 12345\n    filename = \"fattura_XX_XXXX\"\n    attachment = open('/path/to/file.pdf', 'rb')\n\n    api_response = api_instance.upload_issued_document_attachment(company_id, filename=filename, attachment=attachment)\n    attachmen_token = api_response.data.attachment_token\n"})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:"enterprisecloud_Ruby_Sdk.configure do |config|\n  config.access_token = 'YOUR_ATTACHMENT_TOKEN'\nend\n\napi_instance = enterprisecloud_Ruby_Sdk::IssuedDocumentsApi.new\ncompany_id = 12345\nopts = {\n  filename: 'fattura_XX_XXXX',\n  attachment: File.open('/path/to/file.pdf')\n}\nres = api_instance.upload_issued_document_attachment(company_id, opts)\n\nattachment_token =  res.data.attachment_token\n"})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const apiConfig = new Configuration({\n  accessToken: "YOUR_ACCESS_TOKEN",\n});\n\nlet apiInstance = new IssuedDocumentsApi(apiConfig);\nlet companyId = 12345;\nlet filename = "fattura_XX_XXXX";\nlet attachment = fs.createReadStream("path/to/file.pdf");\n\nlet res = await apiInstance.uploadIssuedDocumentAttachment(\n  companyId,\n  filename,\n  attachment\n);\nlet attachemntToken = res.data.data?.attachment_token;\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Issued Document attachment token"}),(0,s.jsx)(n.td,{children:"data.attachment_token"}),(0,s.jsx)(n.td,{children:"FAKE_TOKEN"}),(0,s.jsx)(n.td,{children:"Check Upload Attachment Method"})]})})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"nine-step-nine-customisation",children:["9\ufe0f\u20e3","\xa0 Step Nine: Customisation"]}),"\n",(0,s.jsx)(n.p,{children:"The customization section allows the choice of the invoice template and is useful to add some details."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"template"}),"/",(0,s.jsx)(n.strong,{children:"delivery_note_template"}),"/",(0,s.jsx)(n.strong,{children:"acc_inv_template"}),": invoice/delivery note/accompanying invoice template, only the id of the template has to be specified, you can retrieve it using the ",(0,s.jsx)(n.a,{href:"/api-reference#get-/info/templates",children:"list templates"})," method."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"h_margins"}),"/",(0,s.jsx)(n.strong,{children:"v_margins"}),": horizontal/vertical margins."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"show_payments"}),": if this flag is set to false, the expiration dates of the payments will not be shown on the document."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"show_tspay_button"}),": if this flag is set to true, when the invoice is received by the client it can be paid directly via TS Pay and, without further operations, the invoice will result as paid."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"show_notification_button"}),": if this flag is set to true when the client pays the invoice he can notify the payment by clicking the button."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Here there is our final JSON, complete with the attachment and our favorite invoice template:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// NOTE: this is a complete request, but please customize it before trying to send it!\n\n{\n  "data": {\n    "type": "invoice",\n    "entity": {\n      "id": 1,\n      "name": "Mario Rossi",\n      "vat_number": "47803200154",\n      "tax_code": "RSSMRA91M20B967Q",\n      "address_street": "Via Italia, 66",\n      "address_postal_code": "20900",\n      "address_city": "Milano",\n      "address_province": "MI",\n      "address_extra": "",\n      "country": "Italia"\n    },\n    "date": "2022-01-20",\n    "number": 1,\n    "numeration": "/fatt",\n    "subject": "internal subject",\n    "visible_subject": "visible subject",\n    "currency": {\n      "id": "EUR",\n      "exchange_rate": "1.00000",\n      "symbol": "\u20ac"\n    },\n    "language": {\n      "code": "it",\n      "name": "Italiano"\n    },\n    "items_list": [\n      {\n        "product_id": 4,\n        "code": "TV3",\n        "name": "Tavolo in legno",\n        "net_price": 100,\n        "category": "cucina",\n        "discount": 0,\n        "qty": 1,\n        "vat": {\n          "id": 0\n        }\n      }\n    ],\n    "payment_method": {\n      "id": 386683\n    },\n    "payments_list": [\n      {\n        "amount": 122,\n        "due_date": "2022-01-23",\n        "paid_date": "2022-01-22",\n        "status": "paid",\n        "payment_account": {\n          "id": 110\n        }\n      }\n    ],\n    "attachment_token": "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n    "template": {\n      "id": 150\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'// NOTE: this is a complete request, but please customize it!!!\n// In the next step we\'ll explain how to perform the request to the API.\n\n// in this example we are using our C# SDK\n// https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\nEntity entity = new Entity(\n    id: 1,\n    name: "Mario Rossi",\n    vatNumber: "47803200154",\n    taxCode: "RSSMRA91M20B967Q",\n    addressStreet: "Via Italia, 66",\n    addressPostalCode: "20900",\n    addressCity: "Milano",\n    addressProvince: "MI",\n    country: "Italia"\n);\n\nIssuedDocument invoice = new IssuedDocument(\n    type: IssuedDocumentType.Invoice,\n    entity: entity,\n    date: new DateTime(2022, 01, 20),\n    number: 1,\n    numeration: "/fatt",\n    subject: "internal subject",\n    visibleSubject: "visible subject",\n    currency: new Currency(\n        id: "EUR"\n    ),\n    language: new Language(\n        code: "it",\n        name: "italiano"\n    ),\n    itemsList: new List < IssuedDocumentItemsListItem > {\n        new IssuedDocumentItemsListItem(\n            productId: 4,\n            code: "TV3",\n            name: "Tavolo in legno",\n            netPrice: 100,\n            category: "cucina",\n            discount: 0,\n            qty: 1,\n            vat: new VatType(\n                id: 0\n            )\n        )\n    },\n    paymentsList: new List < IssuedDocumentPaymentsListItem > {\n        new IssuedDocumentPaymentsListItem(\n            amount: 122,\n            dueDate: new DateTime(2022, 01, 23),\n            paidDate: new DateTime(2022, 01, 22),\n            status: IssuedDocumentStatus.Paid,\n            paymentAccount: new PaymentAccount(\n                id: 110\n            )\n        )\n    },\n    paymentMethod: new PaymentMethod(\n        id: 386683\n    ),\n    // Finally we can add the attachment token of our uploaded file and a template\n    // Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/IssuedDocumentsApi.md#uploadIssuedDocumentAttachment\n    attachmentToken: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n    // List your templates: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/InfoApi.md#listTemplates\n    template: new DocumentTemplate(\n        id: 150\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\nentity := *enterprisecloud.NewEntity().\n    SetId(1).\n    SetName("Mario Rossi").\n    SetVatNumber("RSSMRA91M20B967Q").\n    SetTaxCode("RSSMRA91M20B967Q").\n    SetAddressStreet("Via Italia, 66").\n    SetAddressPostalCode("20900").\n    SetAddressCity("Milano").\n    SetAddressProvince("MI").\n    SetCountry("Italia")\n\ninvoice := *enterprisecloud.NewIssuedDocument().\n    SetEntity(entity).\n    SetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n    SetDate("2022-01-20").\n    SetNumber(1).\n    SetNumeration("/fatt").\n    SetSubject("internal subject").\n    SetVisibleSubject("visible subject").\n    SetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n    SetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n    SetItemsList([]enterprisecloud.IssuedDocumentItemsListItem{\n        *enterprisecloud.NewIssuedDocumentItemsListItem().\n            SetProductId(4).\n            SetCode("TV3").\n            SetName("Tavolo in legno").\n            SetNetPrice(100).\n            SetCategory("cucina").\n            SetDiscount(0).\n            SetQty(1).\n            SetVat(*enterprisecloud.NewVatType().SetId(0)),\n    }).\n    SetPaymentsList([]enterprisecloud.IssuedDocumentPaymentsListItem{\n        *enterprisecloud.NewIssuedDocumentPaymentsListItem().\n            SetAmount(122).\n            SetDueDate("2022-01-23").\n            SetPaidDate("2022-01-22").\n            SetStatus(enterprisecloud.IssuedDocumentStatuses.NOT_PAID).\n            SetPaymentAccount(*enterprisecloud.NewPaymentAccount().SetId(110)),\n    }).\n    SetPaymentMethod(*enterprisecloud.NewPaymentMethod().SetId(386683)).\n    // Finally we can add the attachment token of our uploaded file and a template\n    // Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/IssuedDocumentsApi.md#uploadIssuedDocumentAttachment\n    SetAttachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw").\n    // List your templates: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/InfoApi.md#listTemplates\n    SetTemplate(*enterprisecloud.NewDocumentTemplate().SetId(150))\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// NOTE: this is a complete request, but please customize it!!!\n// In the next step we\'ll explain how to perform the request to the API.\n\n// in this example we are using our Java SDK\n// https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\nEntity entity = new Entity()\n        .id(1)\n        .name("Mario Rossi")\n        .vatNumber("47803200154")\n        .taxCode("RSSMRA91M20B967Q")\n        .addressStreet("Via Italia, 66")\n        .addressPostalCode("20900")\n        .addressCity("Milano")\n        .addressProvince("MI")\n        .country("Italy");\n\nIssuedDocument invoice = new IssuedDocument()\n        .type(IssuedDocumentType.INVOICE)\n        .entity(entity)\n        .date(LocalDate.of(2022, 1, 20))\n        .number(1)\n        .numeration("/fatt")\n        .subject("internal subject")\n        .visibleSubject("visible subject")\n        .currency(new Currency().id("EUR"))\n        .language(new Language()\n                        .code("it")\n                        .name("italiano")\n        )\n        .addItemsListItem(\n                new IssuedDocumentItemsListItem()\n                        .productId(4)\n                        .code("TV3")\n                        .name("Tavolo in legno")\n                        .netPrice(BigDecimal.valueOf(100))\n                        .category("cucina")\n                        .discount(BigDecimal.valueOf(0))\n                        .qty(BigDecimal.valueOf(1))\n                        .vat(new VatType().id(0))\n        )\n        .addPaymentsListItem(\n                new IssuedDocumentPaymentsListItem()\n                        .amount(BigDecimal.valueOf(122))\n                        .dueDate(LocalDate.of(2022, 01, 23))\n                        .paidDate(LocalDate.of(2022, 01, 22))\n                        .status(IssuedDocumentStatus.PAID)\n                        .paymentAccount(new PaymentAccount().id(110))\n        )\n        .paymentMethod(\n                new PaymentMethod().id(386683)\n        )\n        // Finally we can add the attachment token of our uploaded file and a template\n        // Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/IssuedDocumentsApi.md#uploadIssuedDocumentAttachment\n        .attachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw")\n        // List your templates: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/InfoApi.md#listTemplates\n        .template(new DocumentTemplate().id(150));\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a complete request, but please customize it!!!\n// In the next step we\'ll explain how to perform the request to the API.\n\n// In this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n$invoice->setItemsList(\n    array(\n        new IssuedDocumentItemsListItem(\n            array(\n                "product_id" => 4,\n                "code" => "TV3",\n                "name" => "Tavolo in legno",\n                "net_price" => 100,\n                "category" => "cucina",\n                "discount" => 0,\n                "qty" => 1,\n                "vat" => new VatType(\n                    array(\n                        "id" => 0\n                    )\n                )\n            )\n        )\n    )\n);\n$invoice->setPaymentMethod(\n    new PaymentMethod(\n        array(\n            "id" => 386683\n        )\n    )\n);\n$invoice->setPaymentsList(\n    array(\n        new IssuedDocumentPaymentsListItem(\n            array(\n                "amount" => 122,\n                "due_date" => new DateTime("2022-01-23"),\n                "paid_date" => new DateTime("2022-01-22"),\n                "status" => IssuedDocumentStatus::PAID,\n                "payment_account" => new PaymentAccount(\n                    array(\n                        "id" => 110\n                    )\n                )\n            )\n        )\n    )\n);\n// Finally we can add the attachment token of our uploaded file and a template\n// Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/IssuedDocumentsApi.md#uploadissueddocumentattachment\n$invoice->setAttachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw");\n// List your templates: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/InfoApi.md#listtemplates\n$invoice->setTemplate(\n    new DocumentTemplate(\n        array(\n            "id" => 150\n        )\n    )\n);\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a complete request, but please customize it!!!\n// In the next step we\'ll explain how to perform the request to the API.\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\ninvoice.currency = {\n  id: "EUR",\n};\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\ninvoice.items_list = [\n  {\n    product_id: 4,\n    code: "tv3",\n    name: "tavolo in legno",\n    net_price: 100,\n    category: "cucina",\n    discount: 0,\n    qty: 1,\n    vat: {\n      id: 0,\n    },\n  },\n];\ninvoice.payments_list = [\n  {\n    amount: 122,\n    due_date: "2022-01-23",\n    paid_date: "2022-01-22",\n    status: "paid",\n    payment_account: {\n      id: 10,\n    },\n  },\n];\ninvoice.payment_method = {\n  id: 386683,\n};\n// Finally we can add the attachment token of our uploaded file and a template\n// Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/IssuedDocumentsApi.md#uploadIssuedDocumentAttachment\ninvoice.attachment_token =\n  "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw";\n// List your templates: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/InfoApi.md#listTemplates\ninvoice.template = {\n  id: 150,\n};\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'# NOTE: this is a complete request, but please customize it!!!\n# In the next step we\'ll explain how to perform the request to the API.\n\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    items_list = [\n        IssuedDocumentItemsListItem(\n            product_id=4,\n            code="TV3",\n            name="Tavolo in legno",\n            net_price=100.0,\n            category="cucina",\n            discount=0.0,\n            qty=1.0,\n            vat=VatType(\n                id=0\n            )\n        )\n    ],\n    payments_list = [\n        IssuedDocumentPaymentsListItem(\n            amount=122.0,\n            due_date=datetime.date(2022, 1, 23),\n            paid_date=datetime.date(2022, 1, 22),\n            status=IssuedDocumentStatus("paid"),\n            payment_account=PaymentAccount(\n                id=110\n            )\n        )\n    ],\n    payment_method = PaymentMethod(\n        id=386683\n    ),\n    # Finally we can add the attachment token of our uploaded file and a template\n    # Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/IssuedDocumentsApi.md#upload_issued_document_attachment\n    attachment_token = "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n    # List your templates: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/InfoApi.md#list_templates\n    template = DocumentTemplate(\n        id=150\n    )\n)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'# NOTE: this is a complete request, but please customize it!!!\n# In the next step we\'ll explain how to perform the request to the API.\n\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  items_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentItemsListItem.new(\n          product_id: 4,\n          code: "TV3",\n          name: "Tavolo in legno",\n          net_price: 100,\n          category: "cucina",\n          discount: 0,\n          qty: 1,\n          vat: enterprisecloud_Ruby_Sdk::VatType.new(\n              id: 0\n          )\n      )\n  ),\n  payments_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentPaymentsListItem.new(\n          amount: 122,\n          due_date: Date.new(2022, 01, 23),\n          paid_date: Date.new(2022, 01, 22),\n          status: enterprisecloud_Ruby_Sdk::IssuedDocumentStatus::PAID,\n          payment_account: enterprisecloud_Ruby_Sdk::PaymentAccount.new(\n              id: 110\n          )\n      )\n  ),\n  payment_method: enterprisecloud_Ruby_Sdk::PaymentMethod.new(\n      id: 386683\n  ),\n  # Finally we can add the attachment token of our uploaded file and a template\n  # Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/IssuedDocumentsApi.md#upload_issued_document_attachment\n  attachment_token: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n  # List your templates: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/InfoApi.md#list_templates\n  template: enterprisecloud_Ruby_Sdk::DocumentTemplate.new(\n      id: 150\n  )\n)\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a partial request, please wait before sending it\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  items_list: [\n    {\n      product_id: 4,\n      code: "TV3",\n      name: "Tavolo in legno",\n      net_price: 100,\n      category: "cucina",\n      discount: 0,\n      qty: 1,\n      vat: {\n        id: 0,\n      },\n    },\n  ],\n  payments_list: [\n    {\n      amount: 122,\n      due_date: "2022-01-23",\n      paid_date: "2022-01-22",\n      status: "paid",\n      payment_account: {\n        id: 10,\n      },\n    },\n  ],\n  payment_method: {\n    id: 386683,\n  },\n  // Finally we can add the attachment token of our uploaded file and a template\n  // Upload your attachment: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/IssuedDocumentsApi.md#uploadIssuedDocumentAttachment\n  attachment_token: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n  // List your templates: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/InfoApi.md#listTemplates\n  template: {\n    id: 150,\n  },\n};\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsx)(n.p,{children:"As done in the previous step, we'll show you the list of the fields to be populated for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Template id"}),(0,s.jsx)(n.td,{children:"data.template.id"}),(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:"Check List Templates Method"})]})})]}),(0,s.jsxs)(n.p,{children:["Please, remember that this request will most probably ",(0,s.jsx)(n.strong,{children:"fail"})," if executed as-is! For example, the IDs specified in the request must exist in order to avoid getting an error response!\nRemember to check the various methods explained in this guide to fill the request fields correctly!"]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"white_check_mark-create-the-document",children:["\u2705","\xa0 Create the document!"]}),"\n",(0,s.jsxs)(n.p,{children:["Now we are ready to create an invoice, so let's ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/issued_documents",children:"create an invoice"})," using the request we just built:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /c/1235/issued_documents HTTP/1.1\nAccept: application/json\nContent-Type: application/json\nHost: api-v2.enterprisecloud.it\nContent-Length: 900\n\n{"data":{"type":"invoice","entity":{"id":1,"name":"Mario Rossi","vat_number":"47803200154","tax_code":"RSSMRA91M20B967Q","address_street":"Via Italia, 66","address_postal_code":"20900","address_city":"Milano","address_province":"MI","address_extra":"","country":"Italia"},"date":"2022-01-20","number":1,"numeration":"\\/fatt","subject":"internal subject","visible_subject":"visible subject","currency":{"id":"EUR","exchange_rate":"1.00000","symbol":"\\u20ac"},"language":{"code":"it","name":"Italiano"},"items_list":[{"product_id":4,"code":"TV3","name":"Tavolo in legno","net_price":100,"category":"cucina","discount":0,"qty":1,"vat":{"id":0}}],"payment_method":{"id":386683},"payments_list":[{"amount":122,"due_date":"2022-01-23","paid_date":"2022-01-22","status":"paid","payment_account":{"id":110}}],"attachment_token":"YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw","template":{"id":150}}}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'using System;\nusing System.Collections.Generic;\nusing It.enterprisecloud.Sdk.Api;\nusing It.enterprisecloud.Sdk.Client;\nusing It.enterprisecloud.Sdk.Model;\n\nnamespace test {\n    class Program {\n        static void Main(string[] args) {\n            Configuration config = new Configuration();\n\n            //set your access token\n            config.AccessToken = "YOUR_ACCESS_TOKEN";\n\n            var apiInstance = new IssuedDocumentsApi(config);\n            //set your company id\n            var companyId = 12345;\n\n            // NOTE: this is a complete request, but please customize it!!!\n            // In the next step we\'ll explain how to perform the request to the API.\n\n            // in this example we are using our C# SDK\n            // https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\n            Entity entity = new Entity(\n                id: 1,\n                name: "Mario Rossi",\n                vatNumber: "47803200154",\n                taxCode: "RSSMRA91M20B967Q",\n                addressStreet: "Via Italia, 66",\n                addressPostalCode: "20900",\n                addressCity: "Milano",\n                addressProvince: "MI",\n                country: "Italia"\n            );\n\n            IssuedDocument invoice = new IssuedDocument(\n                type: IssuedDocumentType.Invoice,\n                entity: entity,\n                date: new DateTime(2022, 01, 20),\n                number: 1,\n                numeration: "/fatt",\n                subject: "internal subject",\n                visibleSubject: "visible subject",\n                currency: new Currency(\n                    id: "EUR"\n                ),\n                language: new Language(\n                    code: "it",\n                    name: "italiano"\n                ),\n                itemsList: new List < IssuedDocumentItemsListItem > {\n                    new IssuedDocumentItemsListItem(\n                        productId: 4,\n                        code: "TV3",\n                        name: "Tavolo in legno",\n                        netPrice: 100,\n                        category: "cucina",\n                        discount: 0,\n                        qty: 1,\n                        vat: new VatType(\n                            id: 0\n                        )\n                    )\n                },\n                paymentsList: new List < IssuedDocumentPaymentsListItem > {\n                    new IssuedDocumentPaymentsListItem(\n                        amount: 122,\n                        dueDate: new DateTime(2022, 01, 23),\n                        paidDate: new DateTime(2022, 01, 22),\n                        status: IssuedDocumentStatus.Paid,\n                        paymentAccount: new PaymentAccount(\n                            id: 110\n                        )\n                    )\n                },\n                paymentMethod: new PaymentMethod(\n                    id: 386683\n                ),\n                attachmentToken: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n                template: new DocumentTemplate(\n                    id: 150\n                )\n            );\n\n            // Here we put our invoice in the request object\n            CreateIssuedDocumentRequest createIssuedDocumentRequest = new CreateIssuedDocumentRequest(\n                data: invoice\n            );\n\n            // Now we are all set for the final call\n            // Create the invoice: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/IssuedDocumentsApi.md#createissueddocument\n            try {\n                CreateIssuedDocumentResponse result = apiInstance.CreateIssuedDocument(companyId, createIssuedDocumentRequest);\n                Console.WriteLine(result);\n            } catch (ApiException e) {\n                Console.WriteLine("Exception when calling IssuedDocumentsApi.CreateIssuedDocument: " + e.Message);\n                Console.WriteLine("Status Code: " + e.ErrorCode);\n                Console.WriteLine(e.StackTrace);\n            }\n        }\n    }\n}\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// NOTE: this is a complete request, but please customize it!!!\n// In the next step we\'ll explain how to perform the request to the API.\n\n// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\npackage main\n\nimport (\n\t"context"\n\t"encoding/json"\n\t"fmt"\n\t"os"\n\n\tenterprisecloudapi "github.com/enterprisecloud/enterprisecloud-go-sdk/v2/api"\n\tenterprisecloud "github.com/enterprisecloud/enterprisecloud-go-sdk/v2/model"\n)\n\nfunc main() {\n\t//set your access token\n\tauth := context.WithValue(context.Background(), enterprisecloudapi.ContextAccessToken, "YOUR_ACCESS_TOKEN")\n\tconfiguration := enterprisecloudapi.NewConfiguration()\n\tapiClient := enterprisecloudapi.NewAPIClient(configuration)\n\n\t//set your company id\n\tcompanyId := int32(12345)\n\n\tentity := *enterprisecloud.NewEntity().\n\t\tSetId(1).\n\t\tSetName("Mario Rossi").\n\t\tSetVatNumber("RSSMRA91M20B967Q").\n\t\tSetTaxCode("RSSMRA91M20B967Q").\n\t\tSetAddressStreet("Via Italia, 66").\n\t\tSetAddressPostalCode("20900").\n\t\tSetAddressCity("Milano").\n\t\tSetAddressProvince("MI").\n\t\tSetCountry("Italia")\n\n\tinvoice := *enterprisecloud.NewIssuedDocument().\n\t\tSetEntity(entity).\n\t\tSetType(enterprisecloud.IssuedDocumentTypes.INVOICE).\n\t\tSetDate("2022-01-20").\n\t\tSetNumber(1).\n\t\tSetNumeration("/fatt").\n\t\tSetSubject("internal subject").\n\t\tSetVisibleSubject("visible subject").\n\t\tSetCurrency(*enterprisecloud.NewCurrency().SetId("EUR")).\n\t\tSetLanguage(*enterprisecloud.NewLanguage().SetCode("it").SetName("italiano")).\n\t\tSetItemsList([]enterprisecloud.IssuedDocumentItemsListItem{\n\t\t\t*enterprisecloud.NewIssuedDocumentItemsListItem().\n\t\t\t\tSetProductId(4).\n\t\t\t\tSetCode("TV3").\n\t\t\t\tSetName("Tavolo in legno").\n\t\t\t\tSetNetPrice(100).\n\t\t\t\tSetCategory("cucina").\n\t\t\t\tSetDiscount(0).\n\t\t\t\tSetQty(1).\n\t\t\t\tSetVat(*enterprisecloud.NewVatType().SetId(0)),\n\t\t}).\n\t\tSetPaymentsList([]enterprisecloud.IssuedDocumentPaymentsListItem{\n\t\t\t*enterprisecloud.NewIssuedDocumentPaymentsListItem().\n\t\t\t\tSetAmount(122).\n\t\t\t\tSetDueDate("2022-01-23").\n\t\t\t\tSetPaidDate("2022-01-22").\n\t\t\t\tSetStatus(enterprisecloud.IssuedDocumentStatuses.NOT_PAID).\n\t\t\t\tSetPaymentAccount(*enterprisecloud.NewPaymentAccount().SetId(110)),\n\t\t}).\n\t\tSetPaymentMethod(*enterprisecloud.NewPaymentMethod().SetId(386683)).\n\t\tSetAttachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw").\n\t\tSetTemplate(*enterprisecloud.NewDocumentTemplate().SetId(150))\n\n\t// Here we put our invoice in the request object\n\tcreateIssuedDocumentRequest := *enterprisecloud.NewCreateIssuedDocumentRequest().SetData(invoice)\n\n\t// Now we are all set for the final call\n\t// Create the invoice: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/IssuedDocumentsApi.md#createIssuedDocument\n\tresp, r, err := apiClient.IssuedDocumentsAPI.CreateIssuedDocument(auth, companyId).CreateIssuedDocumentRequest(createIssuedDocumentRequest).Execute()\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, "Error when calling `IssuedDocumentsAPI.CreateIssuedDocument``: %v\\n", err)\n\t\tfmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", r)\n\t}\n\tjson.NewEncoder(os.Stdout).Encode(resp)\n}\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import it.enterprisecloud.sdk.ApiClient;\nimport it.enterprisecloud.sdk.ApiException;\nimport it.enterprisecloud.sdk.Configuration;\nimport it.enterprisecloud.sdk.auth.*;\nimport it.enterprisecloud.sdk.model.*;\nimport it.enterprisecloud.sdk.api.IssuedDocumentsApi;\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n        //set your access token\n        // Configure OAuth2 access token for authorization: OAuth2AuthenticationCodeFlow\n        OAuth OAuth2AuthenticationCodeFlow = (OAuth) defaultClient.getAuthentication("OAuth2AuthenticationCodeFlow");\n        OAuth2AuthenticationCodeFlow.setAccessToken("YOUR ACCESS TOKEN");\n\n        IssuedDocumentsApi apiInstance = new IssuedDocumentsApi(defaultClient);\n        //set your company id\n        Integer companyId = 12345;\n\n        // NOTE: this is a complete request, but please customize it!!!\n        // In the next step we\'ll explain how to perform the request to the API.\n\n        // in this example we are using our Java SDK\n        // https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\n        Entity entity = new Entity()\n                .id(1)\n                .name("Mario Rossi")\n                .vatNumber("47803200154")\n                .taxCode("RSSMRA91M20B967Q")\n                .addressStreet("Via Italia, 66")\n                .addressPostalCode("20900")\n                .addressCity("Milano")\n                .addressProvince("MI")\n                .country("Italy");\n\n        IssuedDocument invoice = new IssuedDocument()\n                .type(IssuedDocumentType.INVOICE)\n                .entity(entity)\n                .date(LocalDate.of(2022, 1, 20))\n                .number(1)\n                .numeration("/fatt")\n                .subject("internal subject")\n                .visibleSubject("visible subject")\n                .currency(new Currency().id("EUR"))\n                .language(new Language()\n                                .code("it")\n                                .name("italiano")\n                )\n                .addItemsListItem(\n                        new IssuedDocumentItemsListItem()\n                                .productId(4)\n                                .code("TV3")\n                                .name("Tavolo in legno")\n                                .netPrice(BigDecimal.valueOf(100))\n                                .category("cucina")\n                                .discount(BigDecimal.valueOf(0))\n                                .qty(BigDecimal.valueOf(1))\n                                .vat(new VatType().id(0))\n                )\n                .addPaymentsListItem(\n                        new IssuedDocumentPaymentsListItem()\n                                .amount(BigDecimal.valueOf(122))\n                                .dueDate(LocalDate.of(2022, 01, 23))\n                                .paidDate(LocalDate.of(2022, 01, 22))\n                                .status(IssuedDocumentStatus.PAID)\n                                .paymentAccount(new PaymentAccount().id(110))\n                )\n                .paymentMethod(\n                        new PaymentMethod().id(386683)\n                )\n                .attachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw")\n                .template(new DocumentTemplate().id(150));\n\n        // Here we put our invoice in the request object\n        CreateIssuedDocumentRequest createIssuedDocumentRequest = new CreateIssuedDocumentRequest()\n                .data(invoice);\n\n        // Now we are all set for the final call\n        // Create the invoice: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/IssuedDocumentsApi.md#createissueddocument\n        try {\n            CreateIssuedDocumentResponse result = apiInstance.createIssuedDocument(companyId, createIssuedDocumentRequest);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling IssuedDocumentsApi#createIssuedDocument");\n            System.err.println("Status code: " + e.getCode());\n            System.err.println("Reason: " + e.getResponseBody());\n            System.err.println("Response headers: " + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'// NOTE: this is a complete request, but please customize it before trying to send it!\n\n// In this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n<?php\n\nuse enterprisecloud\\Model\\Currency;\nuse enterprisecloud\\Model\\DocumentTemplate;\nuse enterprisecloud\\Model\\Entity;\nuse enterprisecloud\\Model\\IssuedDocument;\nuse enterprisecloud\\Model\\IssuedDocumentItemsListItem;\nuse enterprisecloud\\Model\\IssuedDocumentPaymentsListItem;\nuse enterprisecloud\\Model\\IssuedDocumentStatus;\nuse enterprisecloud\\Model\\IssuedDocumentType;\nuse enterprisecloud\\Model\\CreateIssuedDocumentRequest;\nuse enterprisecloud\\Model\\Language;\nuse enterprisecloud\\Model\\PaymentAccount;\nuse enterprisecloud\\Model\\PaymentMethod;\nuse enterprisecloud\\Model\\VatType;\n\nrequire_once(__DIR__ . \'/vendor/autoload.php\');\n\n//set your access token\n$config = enterprisecloud\\Configuration::getDefaultConfiguration()->setAccessToken(\'YOUR_ACCESS_TOKEN\');\n\n$apiInstance = new enterprisecloud\\Api\\IssuedDocumentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\n//set your company id\n$company_id = 12345;\n\n$entity = new Entity;\n$entity\n    ->setId(1)\n    ->setName("Mario Rossi")\n    ->setVatNumber("47803200154")\n    ->setTaxCode("RSSMRA91M20B967Q")\n    ->setAddressStreet("Via Italia, 66")\n    ->setAddressPostalCode("20900")\n    ->setAddressCity("Milano")\n    ->setAddressProvince("MI")\n    ->setCountry("Italia");\n\n$invoice = new IssuedDocument;\n$invoice->setType(IssuedDocumentType::INVOICE);\n$invoice->setEntity($entity);\n$invoice->setDate(new DateTime("2022-01-20"));\n$invoice->setNumber(1);\n$invoice->setNumeration("/fatt");\n$invoice->setSubject("internal subject");\n$invoice->setVisibleSubject("visible subject");\n$invoice->setCurrency(\n    new Currency(\n        array(\n           "id" => "EUR"\n        )\n    )\n);\n$invoice->setLanguage(\n    new Language(\n        array(\n            "code" => "it",\n            "name" => "italiano"\n        )\n    )\n);\n$invoice->setItemsList(\n    array(\n        new IssuedDocumentItemsListItem(\n            array(\n                "product_id" => 4,\n                "code" => "TV3",\n                "name" => "Tavolo in legno",\n                "net_price" => 100,\n                "category" => "cucina",\n                "discount" => 0,\n                "qty" => 1,\n                "vat" => new VatType(\n                    array(\n                        "id" => 0\n                    )\n                )\n            )\n        )\n    )\n);\n$invoice->setPaymentMethod(\n    new PaymentMethod(\n        array(\n            "id" => 386683\n        )\n    )\n);\n$invoice->setPaymentsList(\n    array(\n        new IssuedDocumentPaymentsListItem(\n            array(\n                "amount" => 122,\n                "due_date" => new DateTime("2022-01-23"),\n                "paid_date" => new DateTime("2022-01-22"),\n                "status" => IssuedDocumentStatus::PAID,\n                "payment_account" => new PaymentAccount(\n                    array(\n                        "id" => 110\n                    )\n                )\n            )\n        )\n    )\n);\n$invoice->setAttachmentToken("YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw");\n$invoice->setTemplate(\n    new DocumentTemplate(\n        array(\n            "id" => 150\n        )\n    )\n);\n\n// Here we put our invoice in the request object\n$create_issued_document_request = new CreateIssuedDocumentRequest;\n$create_issued_document_request->setData($invoice);\n\n// Now we are all set for the final call\n// Create the invoice: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/IssuedDocumentsApi.md#createissueddocument\ntry {\n    $result = $apiInstance->createIssuedDocument($company_id, $create_issued_document_request);\n    print_r($result);\n} catch (Exception $e) {\n    echo \'Exception when calling IssuedDocumentsApi->createIssuedDocument: \', $e->getMessage(), PHP_EOL;\n}\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// NOTE: this is a complete request, but please customize it before trying to send it!\n\n// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nvar enterprisecloudSdk = require("@enterprisecloud/enterprisecloud-js-sdk");\nlet defaultClient = enterprisecloudSdk.ApiClient.instance;\n\n//set your access token\nlet OAuth2AuthenticationCodeFlow =\n  defaultClient.authentications["OAuth2AuthenticationCodeFlow"];\nOAuth2AuthenticationCodeFlow.accessToken = "YOUR_ACCESS_TOKEN";\n\nlet apiInstance = new enterprisecloudSdk.IssuedDocumentsApi();\n//set your company id\nlet companyId = 12345;\n\nlet entity = new enterprisecloudSdk.Entity();\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice = new enterprisecloudSdk.IssuedDocument();\ninvoice.type = new enterprisecloudSdk.IssuedDocumentType().invoice;\ninvoice.entity = entity;\ninvoice.date = "2022-01-20";\ninvoice.number = 1;\ninvoice.numeration = "/fatt";\ninvoice.subject = "internal subject";\ninvoice.visible_subject = "visible subject";\ninvoice.currency = {\n  id: "EUR",\n};\ninvoice.language = {\n  code: "it",\n  name: "Italiano",\n};\ninvoice.items_list = [\n  {\n    product_id: 4,\n    code: "tv3",\n    name: "tavolo in legno",\n    net_price: 100,\n    category: "cucina",\n    discount: 0,\n    qty: 1,\n    vat: {\n      id: 0,\n    },\n  },\n];\ninvoice.payments_list = [\n  {\n    amount: 122,\n    due_date: "2022-01-23",\n    paid_date: "2022-01-22",\n    status: "paid",\n    payment_account: {\n      id: 10,\n    },\n  },\n];\ninvoice.payment_method = {\n  id: 386683,\n};\ninvoice.attachment_token =\n  "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw";\ninvoice.template = {\n  id: 150,\n};\n\n// Here we put our invoice in the request object\nlet createIssuedDocumentRequest =\n  new enterprisecloudSdk.CreateIssuedDocumentRequest();\ncreateIssuedDocumentRequest.data = invoice;\n\nlet opts = {\n  createIssuedDocumentRequest: createIssuedDocumentRequest,\n};\n\n// Now we are all set for the final call\n// Create the invoice: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/IssuedDocumentsApi.md#createIssuedDocument\napiInstance.createIssuedDocument(companyId, opts).then(\n  (result) => {\n    console.log(\n      "API called successfully. Returned result: " + JSON.stringify(result)\n    );\n  },\n  (error) => {\n    console.error(error);\n  }\n);\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'import datetime\nimport enterprisecloud_python_sdk\nfrom enterprisecloud_python_sdk.api import issued_documents_api\nfrom enterprisecloud_python_sdk.models.vat_type import VatType\nfrom enterprisecloud_python_sdk.models.currency import Currency\nfrom enterprisecloud_python_sdk.models.language import Language\nfrom enterprisecloud_python_sdk.models.entity import Entity\nfrom enterprisecloud_python_sdk.models.payment_method import PaymentMethod\nfrom enterprisecloud_python_sdk.models.payment_account import PaymentAccount\nfrom enterprisecloud_python_sdk.models.document_template import DocumentTemplate\nfrom enterprisecloud_python_sdk.models.issued_document import IssuedDocument\nfrom enterprisecloud_python_sdk.models.issued_document_type import IssuedDocumentType\nfrom enterprisecloud_python_sdk.models.issued_document_status import IssuedDocumentStatus\nfrom enterprisecloud_python_sdk.models.create_issued_document_request import CreateIssuedDocumentRequest\nfrom enterprisecloud_python_sdk.models.create_issued_document_response import CreateIssuedDocumentResponse\nfrom enterprisecloud_python_sdk.models.issued_document_items_list_item import IssuedDocumentItemsListItem\nfrom enterprisecloud_python_sdk.models.issued_document_payments_list_item import IssuedDocumentPaymentsListItem\n\nfrom pprint import pprint\n\n# set your access token\nconfiguration = enterprisecloud_python_sdk.Configuration()\nconfiguration.access_token = "YOUR_ACCESS_TOKEN"\n\n# set your company id\ncompany_id = 12345\n\n# NOTE: this is a complete request, but please customize it!!!\n# In the next step we\'ll explain how to perform the request to the API.\n\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nentity = Entity(\n    id=1,\n    name="Mario Rossi",\n    vat_number="47803200154",\n    tax_code="RSSMRA91M20B967Q",\n    address_street="Via Italia, 66",\n    address_postal_code="20900",\n    address_city="Milano",\n    address_province="MI",\n    country="Italia"\n)\n\ninvoice = IssuedDocument(\n    type = IssuedDocumentType("invoice"),\n    entity = entity,\n    date = datetime.date(2021, 1, 20),\n    number = 1,\n    numeration = "/fatt",\n    subject = "internal subject",\n    visible_subject = "visible subject",\n    currency = Currency(\n        id="EUR"\n    ),\n    language = Language(\n        code="it",\n        name="italiano"\n    ),\n    items_list = [\n        IssuedDocumentItemsListItem(\n            product_id=4,\n            code="TV3",\n            name="Tavolo in legno",\n            net_price=100.0,\n            category="cucina",\n            discount=0.0,\n            qty=1.0,\n            vat=VatType(\n                id=0\n            )\n        )\n    ],\n    payments_list = [\n        IssuedDocumentPaymentsListItem(\n            amount=122.0,\n            due_date=datetime.date(2022, 1, 23),\n            paid_date=datetime.date(2022, 1, 22),\n            status=IssuedDocumentStatus("paid"),\n            payment_account=PaymentAccount(\n                id=110\n            )\n        )\n    ],\n    payment_method = PaymentMethod(\n        id=386683\n    ),\n    attachment_token = "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n    template = DocumentTemplate(\n        id=150\n    )\n)\n\n# Here we put our invoice in the request object\ncreate_issued_document_request = CreateIssuedDocumentRequest(\n    data = invoice\n)\n\n# Now we are all set for the final call\n# Create the invoice: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/IssuedDocumentsApi.md#create_issued_document\n\nwith enterprisecloud_python_sdk.ApiClient(configuration) as api_client:\n\n    api_instance = issued_documents_api.IssuedDocumentsApi(api_client)\n    try:\n        api_response = api_instance.create_issued_document(company_id, create_issued_document_request=create_issued_document_request)\n        pprint(api_response)\n    except enterprisecloud_python_sdk.ApiException as e:\n        print("Exception when calling IssuedDocumentsApi->create_issued_document: %s\\n" % e)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'require \'time\'\nrequire \'enterprisecloud_ruby_sdk\'\n\nenterprisecloud_Ruby_Sdk.configure do |config|\n  # set your access token\n  config.access_token = \'YOUR ACCESS TOKEN\'\nend\n\napi_instance = enterprisecloud_Ruby_Sdk::IssuedDocumentsApi.new\n# set your company id\ncompany_id = 12345\n\n# NOTE: this is a complete request, but please customize it!!!\n# In the next step we\'ll explain how to perform the request to the API.\n\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nentity = enterprisecloud_Ruby_Sdk::Entity.new(\n  id: 1,\n  name: "Mario Rossi",\n  vat_number: "47803200154",\n  tax_code: "RSSMRA91M20B967Q",\n  address_street: "Via Italia, 66",\n  address_postal_code: "20900",\n  address_city: "Milano",\n  address_province: "MI",\n  country: "Italia",\n)\n\ninvoice = enterprisecloud_Ruby_Sdk::IssuedDocument.new(\n  type: enterprisecloud_Ruby_Sdk::IssuedDocumentType::INVOICE,\n  entity: entity,\n  date: Date.new(2022, 01, 20),\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: enterprisecloud_Ruby_Sdk::Currency.new(\n      id: "EUR"\n  ),\n  language: enterprisecloud_Ruby_Sdk::Language.new(\n      code: "it",\n      name: "italiano"\n  ),\n  items_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentItemsListItem.new(\n          product_id: 4,\n          code: "TV3",\n          name: "Tavolo in legno",\n          net_price: 100,\n          category: "cucina",\n          discount: 0,\n          qty: 1,\n          vat: enterprisecloud_Ruby_Sdk::VatType.new(\n              id: 0\n          )\n      )\n  ),\n  payments_list: Array(\n    enterprisecloud_Ruby_Sdk::IssuedDocumentPaymentsListItem.new(\n          amount: 122,\n          due_date: Date.new(2022, 01, 23),\n          paid_date: Date.new(2022, 01, 22),\n          status: enterprisecloud_Ruby_Sdk::IssuedDocumentStatus::PAID,\n          payment_account: enterprisecloud_Ruby_Sdk::PaymentAccount.new(\n              id: 110\n          )\n      )\n  ),\n  payment_method: enterprisecloud_Ruby_Sdk::PaymentMethod.new(\n      id: 386683\n  ),\n  attachment_token: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n  template: enterprisecloud_Ruby_Sdk::DocumentTemplate.new(\n      id: 150\n  )\n)\n\n# Here we put our invoice in the request object\nopts = {\n  create_issued_document_request: enterprisecloud_Ruby_Sdk::CreateIssuedDocumentRequest.new(data: invoice)\n}\n# Now we are all set for the final call\n# Create the invoice: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/IssuedDocumentsApi.md#create_issued_document\nbegin\n  result = api_instance.create_issued_document(company_id, opts)\n  p result\nrescue enterprisecloud_Ruby_Sdk::ApiError => e\n  puts "Error when calling IssuedDocumentsApi->create_issued_document: #{e}"\nend\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// NOTE: this is a complete request, but please customize it before trying to send it!\n\n// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\n\nimport {\n  Configuration,\n  IssuedDocumentsApi,\n  Entity,\n  IssuedDocument,\n  IssuedDocumentType,\n  CreateIssuedDocumentRequest,\n} from "@enterprisecloud/enterprisecloud-ts-sdk";\n\n//set your access token\nconst apiConfig = new Configuration({\n  accessToken: "YOUR ACCESS TOKEN",\n});\n\nlet apiInstance = new IssuedDocumentsApi(apiConfig);\n\n//set your company id\nlet companyId = 12345;\n\nlet entity: Entity = {};\nentity.id = 1;\nentity.name = "Mario Rossi";\nentity.vat_number = "47803200154";\nentity.tax_code = "RSSMRA91M20B967Q";\nentity.address_street = "Via Italia, 66";\nentity.address_postal_code = "20900";\nentity.address_city = "Milano";\nentity.address_province = "MI";\nentity.country = "Italia";\n\nlet invoice: IssuedDocument = {\n  type: IssuedDocumentType.Invoice,\n  entity: entity,\n  date: "2022-01-20",\n  number: 1,\n  numeration: "/fatt",\n  subject: "internal subject",\n  visible_subject: "visible subject",\n  currency: {\n    id: "EUR",\n  },\n  language: {\n    code: "it",\n    name: "italiano",\n  },\n  items_list: [\n    {\n      product_id: 4,\n      code: "TV3",\n      name: "Tavolo in legno",\n      net_price: 100,\n      category: "cucina",\n      discount: 0,\n      qty: 1,\n      vat: {\n        id: 0,\n      },\n    },\n  ],\n  payments_list: [\n    {\n      amount: 122,\n      due_date: "2022-01-23",\n      paid_date: "2022-01-22",\n      status: "paid",\n      payment_account: {\n        id: 10,\n      },\n    },\n  ],\n  payment_method: {\n    id: 386683,\n  },\n  attachment_token: "YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw",\n  template: {\n    id: 150,\n  },\n};\n\n// Here we put our invoice in the request object\nlet createIssuedDocumentRequest: CreateIssuedDocumentRequest = {\n  data: invoice,\n};\n\n// Now we are all set for the final call\n// Create the invoice: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/IssuedDocumentsApi.md#createIssuedDocument\napiInstance.createIssuedDocument(companyId, createIssuedDocumentRequest).then(\n  (data) => {\n    console.log(data);\n  },\n  (error) => {\n    console.error(error);\n  }\n);\n'})})}),(0,s.jsx)(o.A,{value:"zap",label:"Zapier",children:(0,s.jsx)(n.p,{children:'Once you filled all the fields you need, you can click the "Continue" button and follow the wizard to create your Zap!'})})]}),"\n",(0,s.jsx)(n.p,{children:"You just created your first invoice. Congratulations!"}),"\n",(0,s.jsxs)(n.h2,{id:"mailbox_with_mail-send-the-document",children:["\ud83d\udcec","\xa0 Send the document"]}),"\n",(0,s.jsxs)(n.p,{children:["After you created your invoice it's time to send it to your customer, with the ",(0,s.jsx)(n.a,{href:"/api-reference#post-/c/-company_id-/issued_documents/-document_id-/email",children:"Schedule Email"})," method.\nTo do that you have 2 options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["use your SMTP server configured in ",(0,s.jsx)(n.a,{href:"https://secure.enterprisecloud.it/settings-mailconfig",children:"Settings -> SMTP configuration"})]}),"\n",(0,s.jsxs)(n.li,{children:["use our mail service setting the sender_id to 0 as shown in the examples below (the mail will result to be sent by ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"mailto:no-reply@enterprisecloud.it",children:"no-reply@enterprisecloud.it"})}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In the email body you can use 3 variables:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"{{allegati}}"}),": adds button to download attachments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"{{logo-1}}"}),": adds the Logo 1 image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"{{logo-2}}"}),": adds the Logo 2 image"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"keep in mind that the max size of the body is 50KiB and must be HTML escaped."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /c/12345/issued_documents/54321/email HTTP/1.1\nAccept: application/json\nContent-Type: application/json\nHost: api-v2.enterprisecloud.it\nContent-Length: 900\n\n{ "data": { "sender_id": 0, "recipient_email": "mariorossi@mail.com", "subject": "Nostra fattura nr. 54321", "body": "Gentile xxxxx,<br>per visualizzare la nostra\xa0<b>fattura nr. 54321\xa0</b>o per scaricarne una copia in versione\xa0PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>", "include": { "document": true, "delivery_note": false, "attachment": false, "accompanying_invoice": false }, "attach_pdf": false, "send_copy": false } }\n'})}),"\n",(0,s.jsx)(n.p,{children:"The corresponding code with our SDKs:"}),"\n",(0,s.jsxs)(r.A,{groupId:"languages",children:[(0,s.jsx)(o.A,{value:"cs",label:"C#",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'using System;\nusing System.Collections.Generic;\nusing It.enterprisecloud.Sdk.Api;\nusing It.enterprisecloud.Sdk.Client;\nusing It.enterprisecloud.Sdk.Model;\n\nnamespace test {\n    class Program {\n        static void Main(string[] args) {\n            Configuration config = new Configuration();\n\n            //set your access token\n            config.AccessToken = "YOUR_ACCESS_TOKEN";\n\n            var apiInstance = new IssuedDocumentsApi(config);\n\n            //set your company id\n            var companyId = 12345;\n\n            //set your previously created document id\n            var documentId = 54321;\n\n            // in this example we are using our C# SDK\n            // https://www.nuget.org/packages/It.enterprisecloud.Sdk/\n\n            EmailSchedule email = new EmailSchedule(\n                senderId: 0,\n                recipientEmail: "mariorossi@mail.com",\n                subject: "Nostra fattura nr. 54321",\n                body: "Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>",\n                include: new EmailScheduleInclude(\n                    document: true,\n                    deliveryNote: false,\n                    attachment: false,\n                    accompanyingInvoice: false\n                    ),\n                attachPdf: false,\n                sendCopy: false\n             );\n\n\n            ScheduleEmailRequest scheduleEmailRequest = new ScheduleEmailRequest(\n                data: email\n            );\n\n            // Now we are all set for the final call\n            // Schedule the email: https://github.com/enterprisecloud/enterprisecloud-csharp-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleemail\n            try\n            {\n                apiInstance.ScheduleEmail(companyId, documentId, scheduleEmailRequest);\n            }\n            catch (ApiException e)\n            {\n                Debug.Print("Exception when calling IssuedDocumentsApi.ScheduleEmail: " + e.Message);\n                Debug.Print("Status Code: " + e.ErrorCode);\n                Debug.Print(e.StackTrace);\n            }\n        }\n    }\n}\n'})})}),(0,s.jsx)(o.A,{value:"go",label:"Go",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// in this example we are using our Go SDK\n// https://github.com/enterprisecloud/enterprisecloud-go-sdk\npackage main\n\nimport (\n\t"context"\n\t"fmt"\n\t"os"\n\n\tenterprisecloudapi "github.com/enterprisecloud/enterprisecloud-go-sdk/v2/api"\n\tenterprisecloud "github.com/enterprisecloud/enterprisecloud-go-sdk/v2/model"\n)\n\nfunc main() {\n\t//set your access token\n\tauth := context.WithValue(context.Background(), enterprisecloudapi.ContextAccessToken, "YOUR_ACCESS_TOKEN")\n\tconfiguration := enterprisecloudapi.NewConfiguration()\n\tapiClient := enterprisecloudapi.NewAPIClient(configuration)\n\n\t//set your company id\n\tcompanyId := int32(12345)\n\n\t//set your company id\n\tdocumentId := int32(54321)\n\n\temail := *enterprisecloud.NewEmailSchedule().\n\t\tSetSenderId(0).\n\t\tSetRecipientEmail("mariorossi@mail.com").\n\t\tSetSubject("Nostra fattura nr. 54321").\n\t\tSetBody("Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>").\n\t\tSetInclude(*enterprisecloud.NewEmailScheduleInclude().\n\t\t\tSetDocument(true).\n\t\t\tSetDeliveryNote(false).\n\t\t\tSetAttachment(false).\n\t\t\tSetAccompanyingInvoice(false),\n\t\t).\n\t\tSetAttachPdf(false).\n\t\tSetSendCopy(false)\n\n\tscheduleEmailRequest := *enterprisecloud.NewScheduleEmailRequest().SetData(email)\n\n    // Now we are all set for the final call\n    // Schedule the email: https://github.com/enterprisecloud/enterprisecloud-go-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleEmail\n\tresp, err := apiClient.IssuedDocumentsAPI.ScheduleEmail(auth, companyId, documentId).ScheduleEmailRequest(scheduleEmailRequest).Execute()\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, "Error when calling `IssuedDocumentsAPI.ScheduleEmail``: %v\\n", err)\n\t\tfmt.Fprintf(os.Stderr, "Full HTTP response: %v\\n", resp)\n\t}\n}\n'})})}),(0,s.jsx)(o.A,{value:"java",label:"Java",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import it.enterprisecloud.sdk.ApiClient;\nimport it.enterprisecloud.sdk.ApiException;\nimport it.enterprisecloud.sdk.Configuration;\nimport it.enterprisecloud.sdk.auth.*;\nimport it.enterprisecloud.sdk.model.*;\nimport it.enterprisecloud.sdk.api.IssuedDocumentsApi;\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n        // set your access token\n        // Configure OAuth2 access token for authorization: OAuth2AuthenticationCodeFlow\n        OAuth OAuth2AuthenticationCodeFlow = (OAuth) defaultClient.getAuthentication("OAuth2AuthenticationCodeFlow");\n        OAuth2AuthenticationCodeFlow.setAccessToken("YOUR ACCESS TOKEN");\n\n        IssuedDocumentsApi apiInstance = new IssuedDocumentsApi(defaultClient);\n\n        // set your company id\n        Integer companyId = 12345;\n\n        // set your previously created document id\n        Integer documentId = 54321;\n\n        // in this example we are using our Java SDK\n        // https://search.maven.org/artifact/it.enterprisecloud/enterprisecloud-java-sdk\n\n        EmailSchedule email = new EmailSchedule()\n            .senderId(0)\n            .recipientEmail("mariorossi@mail.com")\n            .subject("Nostra fattura nr. 54321")\n            .body("Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>")\n            .include(\n                new EmailScheduleInclude()\n                    .document(true)\n                    .deliveryNote(false)\n                    .attachment(false)\n                    .accompanyingInvoice(false))\n            .attachPdf(false)\n            .sendCopy(false);\n\n        ScheduleEmailRequest scheduleEmailRequest = new ScheduleEmailRequest().data(email);\n\n        // Now we are all set for the final call\n        // Schedule the email: https://github.com/enterprisecloud/enterprisecloud-java-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleemail\n        try {\n            apiInstance.scheduleEmail(companyId, documentId, scheduleEmailRequest);\n        } catch (ApiException e) {\n            System.err.println("Exception when calling IssuedDocumentsApi#scheduleEmail");\n            System.err.println("Status code: " + e.getCode());\n            System.err.println("Reason: " + e.getResponseBody());\n            System.err.println("Response headers: " + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}\n'})})}),(0,s.jsx)(o.A,{value:"php",label:"PHP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'<?php\n\nuse enterprisecloud\\Model\\EmailSchedule;\nuse enterprisecloud\\Model\\ScheduleEmailRequest;\n\nrequire_once(__DIR__ . \'/vendor/autoload.php\');\n\n// set your access token\n$config = enterprisecloud\\Configuration::getDefaultConfiguration()->setAccessToken(\'YOUR_ACCESS_TOKEN\');\n\n$apiInstance = new enterprisecloud\\Api\\IssuedDocumentsApi(\n    new GuzzleHttp\\Client(),\n    $config\n);\n\n// set your company id\n$company_id = 12345;\n\n// set your previously retrieved document id\n$document_id = 54321;\n\n// In this example we are using our PHP SDK\n// https://packagist.org/packages/enterprisecloud/enterprisecloud-php-sdk\n\n$email = new EmailSchedule(\n    [\n        "sender_id" => 0,\n        "recipient_email" => "mariorossi@mail.com",\n        "subject" => "Nostra fattura nr. 54321",\n        "body" => "Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>",\n        "include" =>\n            [\n                "document" => true,\n                "delivery_note" => false,\n                "attachment" => false,\n                "accompanying_invoice" => false\n            ],\n        "attach_pdf" => false,\n        "send_copy" => false\n    ]\n);\n\n$schedule_email_request = new ScheduleEmailRequest(["data" => $email]);\n\n// Now we are all set for the final call\n// Schedule the email: https://github.com/enterprisecloud/enterprisecloud-php-sdk/blob/master/docs/Api/IssuedDocumentsApi.md#scheduleemail\ntry {\n    $apiInstance->scheduleEmail($company_id, $document_id, $schedule_email_request);\n} catch (Exception $e) {\n    echo \'Exception when calling IssuedDocumentsApi->scheduleEmail: \', $e->getMessage(), PHP_EOL;\n}\n'})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// in this example we are using our JS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-js-sdk\n\nvar enterprisecloudSdk = require("@enterprisecloud/enterprisecloud-js-sdk");\nlet defaultClient = enterprisecloudSdk.ApiClient.instance;\n\n//set your access token\nlet OAuth2AuthenticationCodeFlow =\n  defaultClient.authentications["OAuth2AuthenticationCodeFlow"];\nOAuth2AuthenticationCodeFlow.accessToken = "YOUR_ACCESS_TOKEN";\n\nlet apiInstance = new enterprisecloudSdk.IssuedDocumentsApi();\n\n//set your company id\nlet companyId = 12345;\n\n//set your previously created document id\nlet documentId = 54321;\n\nlet email = new enterprisecloudSdk.EmailSchedule();\nemail.sender_id = 0;\nemail.recipient_email = "mariorossi@mail.com";\nemail.subject = "Nostra fattura nr. 54321";\nemail.body =\n  "Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>";\nemail.include = {\n  document: true,\n  delivery_note: false,\n  attachment: false,\n  accompanying_invoice: false,\n};\nemail.attach_pdf = false;\nemail.send_copy = false;\n\nlet scheduleEmailRequest = new enterprisecloudSdk.ScheduleEmailRequest();\nscheduleEmailRequest.data = email;\n\nlet opts = {\n  scheduleEmailRequest: scheduleEmailRequest,\n};\n\n// Now we are all set for the final call\n// Schedule the email: https://github.com/enterprisecloud/enterprisecloud-js-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleEmail\napiInstance.scheduleEmail(companyId, documentId, opts).then(\n  () => {\n    console.log("API called successfully");\n  },\n  (error) => {\n    console.error(error);\n  }\n);\n'})})}),(0,s.jsx)(o.A,{value:"py",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'import datetime\nimport enterprisecloud_python_sdk\nfrom enterprisecloud_python_sdk.api import issued_documents_api\nfrom enterprisecloud_python_sdk.models.email_schedule import EmailSchedule\nfrom enterprisecloud_python_sdk.models.schedule_email_request import ScheduleEmailRequest\nfrom pprint import pprint\n\n# set your access token\nconfiguration = enterprisecloud_python_sdk.Configuration()\nconfiguration.access_token = "YOUR_ACCESS_TOKEN"\n\n# set your company id\ncompany_id = 12345\n\n# set your previously create document id\ndocument_id = 54321\n\n# in this example we are using our Python SDK\n# https://pypi.org/project/enterprisecloud-python-sdk/\n\nemail = EmailSchedule(\n    sender_id=0,\n    recipient_email="mariorossi@mail.com",\n    subject="Nostra fattura nr. 54321",\n    body="Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>",\n    include=EmailScheduleInclude(\n        document=True,\n        delivery_note=False,\n        attachment=False,\n        accompanying_invoice=False\n    ),\n    attach_pdf=False,\n    send_copy=False\n)\n\nschedule_email_request = ScheduleEmailRequest(\n    data = email\n)\n\n# Now we are all set for the final call\n# Create the invoice: https://github.com/enterprisecloud/enterprisecloud-python-sdk/blob/master/docs/IssuedDocumentsApi.md#schedule_email\n\nwith enterprisecloud_python_sdk.ApiClient(configuration) as api_client:\n\n    api_instance = issued_documents_api.IssuedDocumentsApi(api_client)\n    try:\n        api_instance.schedule_email(company_id, document_id, schedule_email_request=schedule_email_request)\n    except enterprisecloud_python_sdk.ApiException as e:\n        print("Exception when calling IssuedDocumentsApi->schedule_email: %s\\n" % e)\n'})})}),(0,s.jsx)(o.A,{value:"rb",label:"Ruby",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rb",children:'require \'time\'\nrequire \'enterprisecloud_ruby_sdk\'\n\nenterprisecloud_Ruby_Sdk.configure do |config|\n  # set your access token\n  config.access_token = \'YOUR ACCESS TOKEN\'\nend\n\napi_instance = enterprisecloud_Ruby_Sdk::IssuedDocumentsApi.new\n\n# set your company id\ncompany_id = 12345\n\n# set your previously retrieved document id\ndocument_id = 54321\n\n# in this example we are using our Ruby SDK\n# https://rubygems.org/gems/enterprisecloud_ruby_sdk\n\nemail = enterprisecloud_Ruby_Sdk::EmailSchedule.new(\n  sender_id: 0,\n  recipient_email: "mariorossi@mail.com",\n  subject: "Nostra fattura nr. 54321",\n  body: "Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>",\n  include: enterprisecloud_Ruby_Sdk::EmailScheduleInclude.new(\n      document: true,\n      delivery_note: false,\n      attachment: false,\n      accompanying_invoice: false\n  ),\n  attach_pdf: false,\n  send_copy: false\n)\n\nopts = {\n  schedule_email_request: enterprisecloud_Ruby_Sdk::ScheduleEmailRequest.new(data: email)\n}\n\n# Now we are all set for the final call\n# Create the invoice: https://github.com/enterprisecloud/enterprisecloud-ruby-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleemail\nbegin\n  api_instance.schedule_email(company_id, document_id, opts)\nrescue enterprisecloud_Ruby_Sdk::ApiError => e\n  puts "Error when calling IssuedDocumentsApi->schedule_email: #{e}"\nend\n'})})}),(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// in this example we are using our TS SDK\n// https://www.npmjs.com/package/@enterprisecloud/enterprisecloud-ts-sdk\n\nimport {\n  Configuration,\n  IssuedDocumentsApi,\n  EmailSchedule,\n  ScheduleEmailRequest,\n} from "@enterprisecloud/enterprisecloud-ts-sdk";\n\n// set your access token\nconst apiConfig = new Configuration({\n  accessToken: "YOUR ACCESS TOKEN",\n});\n\nlet apiInstance = new IssuedDocumentsApi(apiConfig);\n\n// set your company id\nlet companyId = 12345;\n\n// set your previously created document id\nlet documentId = 54321;\n\nlet email: EmailSchedule = {};\nemail.sender_id = 0;\nemail.recipient_email = "mariorossi@mail.com";\nemail.subject = "Nostra fattura nr. 54321";\nemail.body =\n  "Gentile xxxxx,<br>per visualizzare la nostra&nbsp;<b>fattura nr. 54321&nbsp;</b>o per scaricarne una copia in versione&nbsp;PDF prema sul bottone sottostante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Ino S.p.A</b>";\nemail.include = {\n  document: true,\n  delivery_note: false,\n  attachment: false,\n  accompanying_invoice: false,\n};\nemail.attach_pdf = false;\nemail.send_copy = false;\n\nlet scheduleEmailRequest: ScheduleEmailRequest = {\n  data: email,\n};\n\n// Now we are all set for the final call\n// Schedule the email: https://github.com/enterprisecloud/enterprisecloud-ts-sdk/blob/master/docs/IssuedDocumentsApi.md#scheduleEmail\napiInstance.schedule(companyId, documentId, createIssuedDocumentRequest).then(\n  () => {\n    console.log("API called successfully");\n  },\n  (error) => {\n    console.error(error);\n  }\n);\n'})})}),(0,s.jsxs)(o.A,{value:"zap",label:"Zapier",children:[(0,s.jsxs)(n.p,{children:["In this case, you'll need to use the ",(0,s.jsx)(n.strong,{children:"Schedule Email"})," Action, so it is a different action than the one used before.\nYou can decide to add another step to your Zap or to create a new Zap with a trigger on the Invoice Creation event."]}),(0,s.jsx)(n.p,{children:"These are the fields required for this step:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field Name"}),(0,s.jsx)(n.th,{children:"Field Code"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"The ID of the company"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"12345"}),(0,s.jsx)(n.td,{children:"Select it from the dropdown menu"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"The ID of the document"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"54321"}),(0,s.jsx)(n.td,{children:"The ID returned from the previous step (Trigger or Action)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Email sender id"}),(0,s.jsx)(n.td,{children:"data.sender_id"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"The ID 0 indicates our mail service"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Email recipient emails"}),(0,s.jsx)(n.td,{children:"data.recipient_email"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"mailto:mariorossi@mail.com",children:"mariorossi@mail.com"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Email subject"}),(0,s.jsx)(n.td,{children:"data.subject"}),(0,s.jsx)(n.td,{children:"Nostra fattura nr. 54321"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Email body"}),(0,s.jsx)(n.td,{children:"data.body"}),(0,s.jsx)(n.td,{children:"XXX"}),(0,s.jsx)(n.td,{children:"HTML escaped email body, check the request above to copy the content"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Include a button to view the document"}),(0,s.jsx)(n.td,{children:"data.include.document"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Include a button to view the delivery note"}),(0,s.jsx)(n.td,{children:"data.include.delivery_note"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Include a button to view the attachment"}),(0,s.jsx)(n.td,{children:"data.include.attachment"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Include a button to view the accompanying invoice"}),(0,s.jsx)(n.td,{children:"data.include.accompanying_invoice"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Attach the PDF of the document"}),(0,s.jsx)(n.td,{children:"data.attach_pdf"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Send a copy of the email..."}),(0,s.jsx)(n.td,{children:"data.send_copy"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{})]})]})]}),(0,s.jsxs)(n.p,{children:["Please, remember that this request will most probably ",(0,s.jsx)(n.strong,{children:"fail"})," if executed as-is! For example, the IDs specified in the request must exist in order to avoid getting an error response!\nRemember to check the various methods explained in this guide to fill the request fields correctly!"]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"rocket-send-the-e-invoice-to-the-sdi",children:["\ud83d\ude80","\xa0 Send the E-Invoice to the SDI"]}),"\n",(0,s.jsxs)(n.p,{children:["If the document you created is an e-invoice, you can also send it to the SDI. We created a ",(0,s.jsx)(n.a,{href:"/guides/e-invoice-management.md",children:"dedicated guide"})," to describe this operation in detail."]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var i=t(34164);const s={tabItem:"tabItem_Ymn6"};var a=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,r),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>_});var i=t(96540),s=t(34164),a=t(23104),r=t(56347),o=t(205),d=t(57485),c=t(31682),l=t(70679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=p(e),[r,d]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[c,u]=h({queryString:t,groupId:s}),[y,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,l.Dv)(t);return[s,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),g=(()=>{const e=c??y;return m({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{g&&d(g)}),[g]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=t(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function x(e){let{className:n,block:t,selectedValue:i,selectValue:r,tabValues:o}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),l=e=>{const n=e.currentTarget,t=d.indexOf(n),s=o[t].value;s!==i&&(c(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>d.push(e),onKeyDown:u,onClick:l,...a,className:(0,s.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function I(e){const n=y(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,j.jsx)(x,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function _(e){const n=(0,b.A)();return(0,j.jsx)(I,{...e,children:u(e.children)},String(n))}},52947:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/company-id-selection-36ade07ccd5b66381ba6b3b3555a8643.png"},59976:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/invoice-creation-data-type-7bf5daa01fd4a883fe9bd7e13d9a44b6.png"},45796:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/invoice-creation-entity-1f1dca2db260979c3651dc9c95a3bc67.png"},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);